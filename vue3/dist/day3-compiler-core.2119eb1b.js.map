{"version":3,"sources":["../node_modules/@vue/shared/dist/shared.esm-bundler.js","../src/tokenizer/types.js","../src/util/whitespace.js","../src/util/location.js","../src/parser/base.js","../src/parser/comments.js","../src/parser/error-message.js","../src/parser/error.js","../src/plugins/estree.js","../src/tokenizer/context.js","../../babel-helper-validator-identifier/src/identifier.js","../../babel-helper-validator-identifier/src/keyword.js","../src/util/identifier.js","../src/util/scopeflags.js","../src/plugins/flow.js","../src/plugins/jsx/xhtml.js","../src/plugins/jsx/index.js","../src/util/scope.js","../src/plugins/typescript/scope.js","../src/util/production-parameter.js","../src/plugins/typescript/index.js","../src/plugins/placeholders.js","../src/plugins/v8intrinsic.js","../src/plugin-utils.js","../src/options.js","../src/tokenizer/state.js","../src/tokenizer/index.js","../src/parser/util.js","../src/parser/node.js","../src/parser/lval.js","../src/util/expression-scope.js","../src/parser/expression.js","../src/parser/statement.js","../src/util/class-scope.js","../src/parser/index.js","../src/index.js","../node_modules/estree-walker/src/estree-walker.js","../node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","day3-compiler-core.js"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","PatchFlagNames","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","range","generateCodeFrame","source","start","end","lines","count","res","j","line","push","repeat","Math","max","String","lineLength","pad","min","join","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","isSSRSafeAttrName","name","hasOwnProperty","isUnsafe","test","console","error","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","normalizeStyle","value","isArray","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","stringifyStyle","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","escapeHtml","string","match","exec","html","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","escapeHtmlComment","src","replace","looseCompareArrays","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","keys","bKeysCount","aHasKey","bHasKey","looseIndexOf","arr","findIndex","toDisplayString","JSON","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","freeze","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","hit","camelizeRE","camelize","_","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","window","global","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","node","elements","takeAllComments","lastElement","commentPreviousNode","newTrailingComments","leadingComment","undefined","type","body","commentStack","firstChild","lastChild","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","innerComments","firstTrailingCommentIndex","ErrorMessages","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","errorTemplate","params","raiseWithData","data","getLocationForPosition","message","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","isSimpleProperty","kind","method","superClass","pattern","flags","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","expression","raw","extra","finishNodeAt","isAsync","checkDeclaration","expr","contextDescription","args","prop","checkLVal","isRecord","protoRef","refExpressionErrors","parenthesized","allowDirectives","topLevel","directiveStatements","directives","d","directiveToStmt","concat","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","tt","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","raise","Errors","optional","callee","exported","specifiers","base","noCalls","optionalChainMember","stop","chain","startNodeAtNode","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getPluginOption","matches","Error","tok","oldInType","inType","expect","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","predicate","flowParsePredicate","flowParseInterfaceish","id","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","returnType","flowParseTypeAndPredicateInitialiser","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","scope","declareName","enter","parseExprAtom","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","local","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","empty","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","chunkStart","ch","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","substr","fromCodePoint","XHTMLEntities","jsxParseIdentifier","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","functionFlags","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","bind","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","find","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","typeCast","ct","tsParseTypeAssertion","readToken_lt_gt","baseCount","getObjectOrClassMethodParams","firstParam","hasContextParam","oldIsDeclareContext","placeholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","v8IntrinsicStart","identifier","parseV8Intrinsic","some","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","skip","lastIndexOf","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","inClass","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","keywordTypes","parent","update","ParserErrors","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","names","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","ExpressionErrors","Node","parser","NodeUtils","processComment","locationNode","unwrapParenthesizedExpression","LValParser","expressionScope","recordParenthesizedIdentifierError","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","checkClashes","disallowLetBinding","strictModeChanged","elem","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","ExpressionParser","computed","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","hasYield","parseYield","ownExpressionErrors","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","isDelete","parseUpdate","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","classScope","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addExtra","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","expectOnePlugin","oldLabels","parseBlock","allowSuper","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","recordAsyncArrowParametersError","reservedTest","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","from","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","hasReturn","discriminant","cases","cur","sawDefault","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","hadStaticBlock","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","parseClassPrivateProperty","declarePrivateName","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","shouldParseExportDeclaration","parseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","exportedName","checkLocalExport","nodes","surrogate","maybeParseDefaultImportSpecifier","parseNext","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","Parser","getScopeHandler","pluginsMap","parseTopLevel","pluginMap","getParser","ast","moduleError","getExpression","getParserClass","parserClassCache","pluginsFromOptions","pluginList","WalkerBase","__init","__init2","__init3","__init4","should_skip","should_remove","replacement","SyncWalkerClass","walker","leave","visit","_should_skip","_should_remove","_replacement","skipped","removed","AsyncWalkerClass","walk","instance","asyncWalk","defaultOnError","createCompilerError","messages","additionalMessage","msg","errorMessages","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","helperNameMap","registerRuntimeHelpers","helpers","getOwnPropertySymbols","s","locStub","createRoot","components","hoists","imports","cached","temps","codegenNode","createVNodeCall","props","patchFlag","dynamicProps","isBlock","disableTracking","helper","createArrayExpression","createObjectExpression","createObjectProperty","createSimpleExpression","isConstant","createInterpolation","createCompoundExpression","createCallExpression","createFunctionExpression","returns","newline","isSlot","createConditionalExpression","createCacheExpression","isVNode","createBlockStatement","createTemplateLiteral","createIfStatement","createAssignmentExpression","createSequenceExpression","createReturnStatement","isStaticExp","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","memberExpRE","isMemberExpression","path","getInnerRange","newLoc","advancePositionWithClone","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","condition","findDir","exp","findProp","dynamicOnly","isBindKey","hasDynamicKeyVBind","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","injectProp","propsWithInjection","unshift","alreadyExists","propKeyName","toValidAssetId","hasScopeRef","ids","branches","decodeRE","decodeMap","defaultParserOptions","delimiters","getNamespace","getTextMode","isPreTag","isCustomElement","decodeEntities","rawText","p1","onError","baseParse","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","mode","ancestors","ns","isEnd","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseText","pushNode","removedWhitespace","Boolean","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","hasVIs","isNativeTag","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","m","parseAttributeValue","dirName","startOffset","getNewPosition","endsWith","isQuoted","valueLoc","modifiers","endIndex","parseTextData","unexpectedChars","open","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","searchString","hoistStatic","root","isSingleElementRoot","child","resultCache","doNotHoistNode","hasHoistedNode","hasRuntimeConstant","staticType","getStaticType","hoist","flag","getPatchFlag","hasNonHoistableProps","getNodeProps","transformHoist","childType","isRuntimeConstant","createTransformContext","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","scopeId","ssr","ssrCssVars","bindingMetadata","identifiers","scopes","vFor","vSlot","vPre","vOnce","currentNode","childIndex","helperString","replaceNode","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","hoisted","transform","traverseNode","createRootCodegen","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","PURE_ANNOTATION","createCodegenContext","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","indentLevel","pure","indent","deindent","withoutNewLine","generate","onContextCreated","hasHelpers","useWithBlock","genFunctionPreamble","optimizeSources","genAssets","genNode","toJSON","VueBinding","aliasHelper","staticHelpers","genHoists","assets","resolver","isText$1","genNodeListAsArray","multilines","genNodeList","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","exhaustiveCheck","genExpressionAsPropertyKey","genNullableArgs","needNewline","needsParens","isNested","prohibitedKeywordRE","stripStringRE","validateBrowserExpression","asParams","asRawStatements","Function","keywordMatch","isLiteralWhitelisted","transformExpression","processExpression","dir","rawExp","bailConstant","knownIds","isDuplicate","needPrefix","shouldPrefix","isPropertyShorthand","isStaticPropertyKey","scopeIds","sort","leadingText","isStaticProperty","transformIf","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","userKey","isSameKey","keyIndex","createChildrenCodegenNode","keyProperty","needFragmentWrapper","vnodeCall","branchExp","transformFor","processFor","forNode","renderExp","keyProp","isStableFragment","fragmentFlag","childBlock","isTemplate","slotOutlet","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","defaultFallback","trackSlotScopes","slotProps","trackVForSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","buildDefaultSlotProperty","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","slotFlag","hasForwardedSlots","slots","directiveImportMap","WeakMap","transformElement","postTransformElement","isComponent","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","flagNames","stringifyDynamicPropNames","isProp","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isBind","dedupeProperties","directiveTransform","needRuntime","propsExpression","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","propsNamesString","transformSlotOutlet","processSlotOutlet","slotArgs","propsWithoutName","fnExpRE","transformOn","augmentor","eventName","rawName","isCacheable","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","transformText","currentContainer","hasText","callArgs","seen","WeakSet","transformOnce","transformModel","createTransformProps","expString","propName","modifiersKey","getBaseTransformPreset","on","model","baseCompile","isModuleMode","noopDirectiveTransform","app","document","getElementById","innerHTML","log"],"mappings":"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A2B,CAA3B;ApCEA,AoCDA,AnCgCkD,GD/BjD,IoCHF,MAEO;ApCCH,AoCAH,eAAOwpD,MAAM,CAAChtC,IAAD,CAAb;ApCAA,AoCCA,AnC8BkD,KD/BhC,ECmBpBzV,KDvBqB,ACmC+B,GAAA,KAAA,CAAA;AD9BlD,AoCCD,AnC6BmD,GD9BjD,ICmBHE,OAWoD,GAAA,KAAA,CAAA;AD9B9C,AoCEN,AnC4BoD,OAVpDV,UAUoD,GAAA,KAAA,CAAA;AD9BlD,AC8BkD,KD9B1B,ECqB1BC,UD1BqB,ACmC+B,GAAA,KAAA,CAAA;AD7BlD,AoC5Ba,AnCyDqC,GD7BjD,ICqBHU,gBAQoD,GAAA,KAAA,CAAA;AD7B9C,AC6B8C,OAPpDT,MAOoD,GAAA,KAAA,CAAA;AD7BlD,AoCIJ,AnCyBsD,KD7BtB,CoCI1Bw6D,CnCmBJv6D,QAMoD,GAAA,GDnC/B,AoCUvB,EnCyBsD,CAAA,MmCzBxB+5D,UAA9B,CAAyC;ApCHrC,AoCOH35D,AnCqBqD,EmCrBrDA,CpCPI,ICuBHH,MmChBU,AnCqB0C,CmCrBzCu6D,EnCqByC,ImCrB1C,CnCqB0C,CmCrBjC,AnCqBiC;AD5B9C,AoCQN,AnCoBoD,OAJpDt6D,OAIoD,GAAA,KAAA,CAAA;AD5BlD,AoCSF,AnCmBoD,KD5BrB,ECyB/BO,EmChBKykB,GnCmB+C,EmCnBpD,CnCmBoD,EmCnBvCs1C,GnCmBuC,CAAA,CDnC/B,CoCgBF,CAACt1C,KAApB;ACtCF,ArC8BI,AoCSF,AnCkBoD,GD3BjD,ICyBHxkB,EmChBK+5D,KAAL,GAAaD,GnCkBuC,GmClBjC,AnCkBiC,CmClBhCC,InCkBgC,CmClBpD,AnCkBoD;AD3B7C,AoCUP,AnCkBE,OAAKp6D,KAAL,GAAaA,KAAb;AoCxDJ,ArC4BI,AC6BA,KD7B6B,EC6BxBE,OAAL,GAAeD,IDrCI,ACqCA,CAACC,OAApB;AD5BA,AoCWFm6D,AnCkBE,EmClBFA,CpCXG,IoCWE,AnCkBE76D,CmCjBP6I,IADK,EAELo6C,GnCgBE,GmClBG,AnCkBe,CAAC,CmCfrB59B,AnCesB5kB,IAAI,CmClBrB,AnCkBsBT,EmCd3B46D,KAJK,EAKL3kD,CnCaE,GmClBG,EAMLxc,KANK,EAOJ;AC9CH,ArC4BS,AoCmBP,AnCWE,OAAKwG,CmCXH4I,IAAJ,EAAU,GnCWR,GAAkB,CAAC,CAACpI,IAAI,CAACR,UAAzB;AD9BA,AoCoBD,AnCWC,KD/B+B,EC+B1BU,GmCXF0kB,KAAJ,EAAW,MpC7BS,ACwCnB,GAAwB,CAAC,CAAC5kB,IAAI,CAACE,gBAA/B;AoCzDJ,ArC2BI,AoCoBA,AnCWA,GD/BC,IC+BIT,EoC1DAq7D,IpC0DL,CmCXMT,EnCWQ,CAAC,CAACr6D,IAAI,CoC1DxB,ApC0DyBP,CoC1DDpJ,ED+CF,GC/CtB,AD+CyB,AnCWrB,EoC1D2B,GD+CDyjE,WAA1B;AC9CA,ArC0BM,AoCqBN,AnCWA,OAAKp6D,CoC1DCrJ,KAAN,CD+CMikE,CnCWN,GAAgB,CAAC,CAACt6D,IAAI,CAACN,GmCXH,GAAG,EnCWvB,GmCX4Bq6D,aAA5B;AC9CH,ArCyBG,AoCsBA,AnCWA,KDjC6B,ECiCxBp6D,MAAL,CmCXM46D,EnCWQ,CAAC,CAACv6D,ED3CG,EC2CC,CAACL,GmCXH,GAAG,AnCWrB,KmCX0Bq6D,WAA1B;ApCrBA,AoCsBA,AnCWA,GDjCC,ICiCIp6D,MmCXAk6D,CnCWL,GAAe,CAAC,CAAC95D,IAAI,CmCXrB,AnCWsBJ,GmCXH,InCWnB,CmCXA;AC/CJ,ArCyBS,AoCuBL,AnCWA,OAAKO,EoC3DA46D,GpC2DL,CmCXKhB,EnCWQ/5D,IAAI,CAACG,KAALH,CmCXb,EChDJ,CAA6BuG,ADgDJ,AnCWM,IoC3D/B,ApC2DiBvG,CmCXb,CChD+BgI,CpC2DGhI,EoC3DtC,EAAwCg7D,ApC2DE,CAAC76D,KAA1BH,EoC3DjB,CpC2DmD,CoC3DDi7D,GpC2D9C,coC3DJ,EAAqE;AACjE,ArCwBA,AoCwBA,AnCWA,KDnCyB,ECmCpB76D,CoC3DC86D,GAAG,EDgDJlB,CChDQ,GrCaM,GC8CnB,GAAqB,CmCXrB,GAAmB,AnCWnB,ImCXA,CChDsC,YAA1B,IAA2C,CAAC,IAA5C,GACN,CAACgB,QAAQ,IAAIG,aAAb,EAA4B50D,IAA5B,KAAqC00D,iBAAiB,IAAK,EAA3D,CADM,GAEN10D,IAFN;AAGA,ArCsBA,AoCyBAqe,AnCUD,GDnCE,CAAC,IqCtBIvuB,AD+CNuuB,KC/CW,AD+CN,CAACtoB,EC/CQ,ED+Cd,CAAW,CC/COqX,ID+CF2F,OC/CF,AD+Cd,CC/C8BjkB,CD+CL+S,IAAzB,CC/CoC,CAAC8yD,AD+CN1Y,GC/CK,CAAtB,CAAd,CD+CA,EAAuChtC,IAAvC,EAA6Cxc,KAA7C;AC9CA3C,ArCqBI,EqCrBJA,KAAK,CAACkQ,IAAN,GAAaA,IAAb;AACAlQ,ArCoBA,AoC2BA,AnCWG,EoC1DHA,EpC0DSgK,CDtCY,EqCpBhB,CAAC2H,GAAN,CD+CI,AnCWa,EoC1DLA,ArCQO,CCkDC,EoC1DpB,AD+CSgyD,EnCWe15D,GAAJ,EAAjB,ImCXH,EAAsB;AC9CtB,ArCoBA,AoC2BC8H,GpC3BA,CAAC,KqCpBK/R,CD+CN+R,IC/CD,AD+CK,GAAG,KAAK4xD,WAAZ;AC9CJ,ArCmBO,AoC4BH,AnCWL,SAASz5D,MmCXChH,OAAL,AnCWL,CmCXkBipD,AnCWKxsD,IAAvB,EmCXK,AnCWuE,EmCXlDwf,IAArB,EAA2Bxc,KAA3B,EAAkCoP,IAAlC;ApC5BD,AoC6BC,AnCUuE,KDvCtD,CCuCe5H,OAAuC,uEAAf,EAAe;AoCzD5E,ArCKuB,ACqDrBA,CDrDF,CCqDEA,IoC1DI26D,GpC0DG,CAACl7D,OAARO,EoC1DiB,CpC0DCxK,EoC1DE,EpC0DpBwK;AoCzDE,ADgDA,AnCUF,MAAMC,KAAK,CmCVL,EnCUQ,GmCVHs5D,CnCUOl6D,SAAJ,CAAc7J,EmCV1B,EAAwB,AnCUZ,EAAoBwK,OAApB,CAAd;AoCzDE,ArCmBJ,AoC6BK,AnCUHH,EAAAA,CoC1DG,GrCmBChM,ICuCI,CAACqM,GAATL,CmCVQrE,AnCUKhG,IAAbqK,EmCVG,AnCUgBI,CmCVJ+hD,IpC7BS,ACuCxBniD,EmCVG,CpC7BwB,CoC6BJmV,IAApB,EAA0Bxc,KAA1B,6DpC5BD,yEADyB,GAEzB,gDAFJ;AqCnBO,ArCsBP,AoC2BK,AnCUH,MDrCI1E,GCqCGmM,KAAP,aDrCyB,GAAG,aAAcjN,OAAO,CAACa,oBAAD,CAAnD;AqCtBI,ApC4DH,KoC5D8C,kBAFzB;AAGlB,ArCuBJ,AoC2BI,GClDC,GrCuBCE,KAAK,GAAG,AoC2BJimE,CpC3BV,MoC2BiB,GAAG,KAAKV,WAArB;AClDG,ADmDH,AnCUJ,SAASn5D,KmCVC85D,MnCUV,CmCViB,AnCUIzkE,GmCVD,CnCUpB,EAAmCmK,EmCVV45D,GnCUzB,EAAkD,QmCV9C;ACnDA,ArCwBJ,AoC6BI,AnCSF,KoC9DmC,IrCwB5BvlE,ACsCA,ImCTAslE,AnCSIj6D,SAAJ,CAAc7J,CmCTnB,EpC7BJ,CAA2BvB,AoC6BJ4lE,AnCSd,EAAoB,IDtC7B,EAAmC3lE,IoC6B/B,CpC7BoC,GAAG,CAA3C,EAA8CC,GAAG,GqC3B3B,ArC2B8BF,MAAM,CAACR,MAA3D,EAAmE;AqCvB/D,ArCwBA,AoC6BA,AnCQ2BsL,GoC7D1B,CpC6D0BA,IDrCrB3K,KAAK,AoC6BNmlE,CnCQoB,EDrCXtlE,ACqCa8K,MDrCP,CAACxL,GoC6BrB,AnCQyB,EDrCX,CAAa,AoC6BNumE,OpC7BP,CAAd,MoC6BA;ACrDG,ArCyBH,AoC6BA,AnCOuCn6D,IAAAA,EDpCnCtL,GCoCmCsL,EDpC9B,ACoC8BA,EmCPlC65D,CpC7BO,CAAZ,SoC6BA,GAAmBO,YAAnB;ACtDA,ArC0BA,AoC8BA,AnCKyB,GAApB,CAAP,CoC7DiC,GrC0BzBzlE,GAAG,CoC8BL0lE,EpC9BQ,EAAZ,GoC8BA,EAAa,MC5DK,CD4DEpyD,IAAP;ACvDb,ADwDA,AnCKH,GoC7DI,SDwDGqyD,OAAJ,EAAa,OAAO,IAAP;ACxDV,ArC0BH,AoC+BA,OpC/BK,IAAIzmE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,KAAK,CAACX,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AqC1BvC,ArC2BIa,IAAAA,ACoCK+L,CoC/D0B,IrC2B1B,ACoCoC,GAAG,CDpCnChM,KAAK,CAACZ,CAAD,CAAL,CAASC,MAAT,GAAkB,CAA3B,MqChCc;AAMlB,AD0DD,AnCKD4M,EAAAA,CoC/DG,EpC+DA,EAAE,ImCLC,AnCKGhB,MmCLGzI,GAAX,AnCKI,CAAc,GmCLAgR,EnCKd,EmCLJ,AnCKyB,EmCLD;AC1DpB,ArC2BC,AoCgCJ,AnCI0B5I,IAAAA,IDpClB3K,KAAK,CoCgCPiC,AnCIoB0I,EAAAA,CDpCT9K,EoCgCN,GpChCP,AoCgCW0T,EpChCS,EoCgCV,CAAQhR,GAAR,CAAd;AC3DA,ArC4BQ,ACmCgB,GAArB,CAD6C,CoC9DP,MrC4B5B,IAAIrC,CAAC,GAAGf,CAAC,GAAGO,IqClCP,CrCkCV,EAAwBQ,CAAC,IAAIf,CAAC,GAAGO,KAAT,IAAkBI,GAAG,GAAGE,KAAhD,EAAuDE,CAAC,EAAxD,EAA4D;AqC3BpE,ArC4BY,AoCgCZ,AnCGF+L,EAAAA,CoC/DG,KpC+DG,EAAE,EDnCU/L,AoCgCZ,CpChCa,CCmCP8K,EDnCU,CAAJ,EoCgCL/I,EpChCc/B,CAAC,CCmCpB,CmCHF,AnCGgB,EDnCUH,GoCgCT,EpChCc,CAACX,ACmC9B,EAAwB,GmCH9B,CpChCY,CoCgCmB,CpC/Bf;AqC7Bb,ArC8BS,AoC+BX,AnCE+BuL,IAAAA,UDjCdxK,ACiCcwK,EAAAA,EDjCV,GAAGzK,CAAC,GAAG,CAAjB;AqC9BZ,ArC+BYD,AoC+BX,AnCC6B,GAAxB,CAF0C,CoC7DjB,GrC+BnBA,CoC6BZ,EpC7Be,CAACG,GoC+BT,CpC/BK,CAAU,EoC+BXsH,CpC/BavH,IAAK,AoC+Bb,CAAC+B,EpC/Bc,EqCtCb,ErCsCiB7B,CoC+BxB,CAAc4B,IpC/BM,CAAW3B,AoC+B/B,CAAJ,EAA0B,CpC/Ba,CAACC,GAAL,CAAS,IAAIC,MAAM,CAACL,IAAD,CAAN,CAAaf,MAA1B,EAAkC,CAAlC,CAAX,CAAiD,MAAKW,KAAK,CAACG,CAAD,CAAI,EAAlF;AqC9BZ,ArC+BY,AoC+BX,AnCCHgM,EAAAA,CoC/DG,MpC+DI,EAAE,GDhCWzL,CoC+BZ,AnCCKuK,ImCDD7L,CAAC,GAAG,CpC/Bc,AoC+B3B,AnCCM,CAAc,CmCDJA,CpC/BcY,AoC+Bb,GAAGkC,EpC/Be,CAAC/B,CAAD,ACgC7B,CDhCwB,AoC+BL,CpC/Bcd,AoC+BbA,AnCCK,MDhCpB,AoC+BX,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AC9DxC,AD+DD,AnCAgCwL,IAAAA,UAAAA,EmCA5B1I,AnCA4B0I,KmCAvB,CAACxL,CAAD,CAAL,KAAa,IAAb,IAAqB,OAAO8C,KAAK,CAAC9C,CAAD,CAAL,CAAS4U,IAAhB,KAAyB,QAAlD,EAA4D;AC/D9D,ArCgCY,AoCgCT,AnCD6B,GAAzB,CAHyC,CoC5DxB,OrCgCR7T,CAAC,KAAKf,AoCgCf,CpChCK,AoCgCJ,EpChCiB,GoCgCZomE,KAAL,CAAWtjE,KAAK,CAAC9C,CAAD,CAAhB,CCxEU,CDwEWoU,IAArB,EAA2Bwc,KAA3B,EAAkCu1C,KAAlC,EAAyC/iE,GAAzC,EAA8CpD,CAA9C,CAAL,EAAuD;AC/D1D,ArCgCgB,AoCgCZ,AnCDNgN,EAAAA,CoC/DG,KpC+DG,EAAE,IAAInB,SAAJ,CAAc,QAAd,EAAwB;AoC/D3B,ArCiCa,AoCgCZ7L,AnCF4BwL,IAAAA,UAAAA,ED9BVjK,AoCgClBvB,AnCF4BwL,CmCE3B,EpChCoB,GAAG9K,KAAK,IAAIG,KAAK,GAAGS,UAAZ,CAAL,GAA+B,CAA3C;AqCjChB,ArCkCgB,AoCgCZ,AnCH0B,GAAxB,CAJ0C,CoC3DtB,WrCkCJrB,MAAM,GAAGkB,IAAI,CAACC,GqC3ClB,ArC2Ca,CAAS,CAAT,EAAYT,GAAG,GAAGE,KAAN,GAAcS,UAAU,GAAGC,GAA3B,GAAiCZ,GAAG,GAAGD,KAAnD,CAAf;AqCjChB,ArCkCgBI,AoCgCb,AnCHL6D,EAAAA,CoC/DG,KpC+DG,ED7BY7D,AC6BV,GD7Ba,CAACG,AC6BV4K,ID7BM,CAAU,IC6BpB,CAAc,GD7BK,GAAW,EC6B9B,ED7BkC3K,AC6BV,MD7BM,CAAWK,GAAX,CAAX,GAA6B,IAAIL,MAAJ,CAAWjB,MAAX,CAAtC;AqClCb,ArCmCU,AoCgCX,AnCJ8BuL,IAAAA,KDjCpB,KCiCoBA,CD3Bf,CC2BeA,GD3BXzK,CAAC,GAAGf,CAAR,EAAW;AqCpC5B,ArCqCgB,AoC+Bf,AnCL6B,GAAxB,CAL0C,CoC1DA,ID2DzC,KpCtBaW,CoC+Bb,EpC/BgB,EoC+BZmC,CpC/BejC,IoC+BV,CpC/BA,EAAiB,EoC+BZ,GC9EH,CD8EP,IAAkB,OAAOiC,KAAK,CAAC8R,IAAb,KAAsB,QAA5C,EAAsD;ACnE7D,ArCqCoB,AoC+BnB,AnCLH5S,EAAAA,CoC/DG,GpC+DC,EAAE,IAAI6J,GmCKFu6D,GpC/BoBnmE,EoC+BzB,CAAW6C,AnCLR,CAAc,ED1Bc,EoC+B/B,CpC/BkC3B,CoC+BhBiT,AnCLf,EAAsB,CD1Ba,CAAChT,AoC+BvC,EAAwBwvB,CpC/BU,CAASzvB,GoC+B3C,CpC/B+C,CAACK,AoC+BjB2kE,GpC/BY,CAASxlE,CoC+BpD,EpC/BuD,AoC+BjByC,GpC/BoBvC,AoC+B1D,EAA2C,GpC/BA,CoC+B3C,CpC/BiES,UAAtB,CAAT,EAA4C,CAA5C,CAAf;AqCrCjB,ArCsCiBR,AoC+BnB,AnCN2B0K,IAAAA,QDzBR1K,ECyBQ0K,CDzBL,CAACvK,ACyBIuK,IDzBR,CAAU,QAAD,GAAW,IAAItK,MAAJ,CAAWjB,MAAX,CAApB;AqCtCpB,ArCuCiB,AoC+BjB,AnCP0B,GAAtB,CAN4C,CoCzD1B,wBAXJ;AAYlB,ApC+DFgN,EAAAA,CoC/DG,EpC+DA,EAAE,IAAIpB,SAAJ,CAAc,KAAd,CAP6C;AoCxD5C,ArCuCYhL,AoCgCjB,AnCLDqM,EAAAA,QD3BkBrM,AoCgCbslE,AnCLG,EAAE,GD3Ba,AoCgCtB,CnCLat6D,CmCKF,EpChCevK,MC2BjB,CAAc,GD3Ba,AC2B3B,EAAmB,CD3BW,CAAtB;AqCvChB,ArCwCa,AoCgCb,AnCN6BiK,IAAAA,CoClEU,SDwEjCg7D,AnCNqB,EAAEh7D,UmCMX,AnCNS,GmCMN,KCpFH,ADoFQy6D,WAA1B;ACvEA,ArCwCS,AoCgCT,AnCPyCx6D,GoCjExC,CpCiEwCA,UmCOnC86D,AnCPmC96D,EAAAA,YmCOrB,GAAG,KAAKu6D,aAA5B;ACxEI,ADyEJ,AnCR2B,GAAnB,CAVwC,SmCkB3CC,WAAL,GAAmB,IAAnB;ACzEA,ArCyCQ,AoCiCR,AnCRF74D,EAAAA,GoClEyC,QD0ElC44D,CnCRK,EAAE,IAAIl6D,MmCQhB,GAAqB,AnCRT,CAAc,IoC/ER,ADuFlB,AnCRY,EAAoB;AoCjEhC,ArCyCK,AoCkCLs6D,AnCVkC56D,GoCjEjC,CpCiEiCA,ImCUlC46D,KAAK,CAAC79D,AnCV0B,EAAEiD,EmCUlC,CAAW,KAAK+Z,EnCVgB,KmCUhC,EAAyBlR,IAAzB,EAA+Bo6C,MAA/B,EAAuChtC,IAAvC,EAA6Cxc,KAA7C;AC3EI,ArC0CH,ACuB6CwG,IAAAA,UAAAA,EAAAA;AoCjE9C,AD6EA,AnCZgC,GAApB,CAXoC,CoCtDA,OD6E5C,KAAKw6D,WAAT,EAAsB,mBC3FJ;AAelB,ArC0CA,AoCmCC5xD,AnCZHhH,EAAAA,CoCjEG,MrC0CMtM,CoCmCNsT,EpCnCS,CAAC3S,ACuBF,CmCYJ,CnCZM,EDvBJ,AoCmCC,CpCnCQ,CCuBDoK,GDvBR,AoCmCMm6D,CpCnCb,KCuBW,CAAc,ImCYxB,AnCZU,EAAoB;AoCjE3B,ArC2CP,AoCmCI,AnCbgCz6D,IAAAA,UAAF,CmCazBhG,CnCb2BgG,MmCahC,CAAaijD,GnCbiB,GmCa9B,EAAqBhtC,IAArB,EAA2Bxc,KAA3B,EAAkCoP,IAAlC;AC9ED,ArC6CJ,AoCkCK,AnCd4C5I,IAAAA,CoCjET,SpCiESA,EAAAA,oBoChF3B;AAgBlB,ArC6CJ,ACmBmC,GoChE9B,ApCgEU,CAZqC;AoCpD5C,ArC8CR,AoCkCI,AnCfF6B,EAAAA,QAAQ,EmCeF,AnCfI,IAAIxB,CmCeHk6D,QnCfD,CAAc,GAAd,CmCeR,AnC5BgD,EmC4BxB;AChFxB,ArC+CJ,AoCkCK,AnCfHz4D,EAAAA,GoClEmC,QpCkExB,EmCeHtF,AnCfK,IAAI6D,EmCed,CAAY2iD,MAAZ,AnCfU,CAAc,CmCeJhtC,GCjGH,ApCkFP,CmCeV,AnC7B+C,EmC6BrBxc,KAA1B;AChFD,ArC+CJ,AoCkCK,AnCfHuI,EAAAA,CoClEG,KpCkEG,EAAE,IAAI1B,SAAJ,CAAc,GAAd,EAAmB;AoClErB,ArCgDR,ACkB+BN,IAAAA,UAAF,EAAEA,UAAF;AoClEzB,ArCiDJ,AoCkCI,AnCjBuCC,IAAAA,CoClEW,SDmF5Ci7D,AnCjBiCj7D,EAAAA,KmCiB1B,GAAG,KAAKu6D,ECpGH,WDoGlB;AClFA,ArCiDJ,AoCmCI,AnCnByB,GoCjExB,ApCiEK,CAf0C,SmCkC3CC,WAAL,GAAmBO,YAAnB;ACpFI,ArCkDR,AoCmCI,AnCnBF/4D,EAAAA,SAAS,EmCmBFu4D,AnCnBI,IAAIl6D,SmCmBb,AnCnBS,CAAc,EmCmBFy6D,EnCnBZ,EAAoB,UmCmB7B;ACrFA,ArCmDJ,AoCoCI,AnCrB+B/6D,IAAAA,CoClEJ,ODuFvBk7D,EnCrByB,EAAEl7D,GmCqB/B,EAAa,KnCrBgB,EmCqBT,IAAP,ICzGK;AAmBlB,ArCmDJ,AoCoCI,AnCtB2CC,GoCjE1C,CpCiE0CA,UAAAA,EAAAA;AoCjEvC,ADwFL,AnCvB8B,GAApB,CAhBuC;AoCjDhD,ApCkEFiC,EAAAA,GoClEqD,OpCkE3C,EAAE,IAAI5B,SAAJ,CAAc,IAAd,EAAoB,2CoCrFZ;AAoBlB,ArCmDJ,AoCsCE,AnCxBkCN,GoCjE/B,CpCiE+BA,EDd9B7J,KoCsCG0S,GnCxByB,CmCwBhC,CnCxBkC7I,SDdX,CCcS,EDdL,6EAA7B;AqCnDQ,ArCoDR,AoCsCE,AnCzB8CC,IAAAA,EDb1C7J,QCa0C6J,EAAAA,UDbtB,GAAG,aAAchM,OAAO,CAACkC,mBAAD,CAAlD;AqCpDI,ArCqDJ,ACYkC,GAApB,CAjBsC,CoChDa,0GApB3C;AAqBlB,ArCqDJ,AoC3DyC,AnCuEvCgM,EAAAA,CoCjEG,KpCiEG,EAAE,IAAI7B,SAAJ,CAAc,GAAd,CAlB0C;AoC/C5C,ArCsDR,ACYE8B,EAAAA,SAAS,EAAE,IAAI9B,SAAJ,CAAc,IAAd,CAnBuC;AoC/ChD,AD4FJ,AnCzBE+B,EAAAA,GoCnE2D,CD4FvD84D,EnCzBE,EAAE,IAAI76D,QmCyBd,CnCzBU,CAAc,GAAd,EAAmB,EmCyBE45D,UAA/B,CAA0C,ECjHpB;AAsBlB,AD+FH35D,AnC7B8BP,EmC6B9BO,CC/FI,CpCkE0BP,SmC6BnB,CAAC26D,AnC7BgB,EAAE36D,ImC6BnB,EAAS,InC7BQ;AoClErB,ArCsDR,AoC0CE,AnC9ByCC,IAAAA,EDZrC5J,QCYqC4J,EAAAA,GDZxB,GAAG,aAAchM,OAAO,CAACkC,mBAAmB,GAC1D,mEADuC,GAEvC,8CAFuC,GAGvC,iCAHsC,CAA3C;AqCtDI,ADiGF,AnC/B2B,GAAnB,CApB0C,CoC9CS,IDiGtDkvB,KAAL,GAAas1C,MAAM,CAACt1C,KAApB,cCvHoB;AAuBlB,ArCyDJ,AoCwCE,AnC/BA/iB,EAAAA,CoClEG,GrCyDChM,ECSE,CmC+BDskE,CnC/BG,ImC+BR,AnC/BYt6D,GmC+BCq6D,KpCxCO,CoCwCD,AnC/BX,CmC+BYC,AnC/BE,CDTC,ECSf,CArB0C,CmCoDlD,6BpCxCF;AqCzDQ,ArC0DR,AoCwCE,AnC/BAr4D,EAAAA,IDTIhM,CCSC,EAAE,IAAI+J,SAAJ,CAAc,EDTE,CCShB,EDTmB,ACSA,EDT5B;AqC1DI,ApCmE0BN,IAAAA,CoCnEY,SpCmEZA,EAAAA,WoC1FR;AAwBlB,ArC0DJ,AoCyCE,AnCjC0B,GAAnB,CAtB2C,ImCuD5C66D,CpCzCCrkE,IoCyCP,CACAqS,IADA,EAEAo6C,MpC3CF,AoCyCE,CpCzCyBxsD,CoC4CzB4uB,GpC5CF,EAAiC,AoCyC/B,EAIAu1C,KAJA,EAKA3kD,IALA,EAMAxc,KANA,EAOC;ACzGC,ArC0DA,AoCgDF,AnCxCA+I,EAAAA,CoClEG,GrC0DGjM,ACQF,EmCwCAsS,AnCxCE,ImCwCN,AnCxCUvI,EmCwCA,OnCxCJ,CAAc,GDRK,ACQnB,CDRoB5J,CCQD,aDRnB,CAAmCD,IAAnC,CAAJ,EAA8C;AqC1D1C,ArC2DA,AoCgDL,AnCzC0BuJ,IAAAA,MmCyCtBqlB,CpChDQ9uB,GCOcyJ,CmCyC1B,CnCzC0BA,CmCyCf,apChDoB,CAACvJ,IAAD,CAA1B;AqC3DJ,ArC4DC,AoCgDD,AnC1CuB,GAAnB,CAvB4C,CoC3ClB,SD4GxBqkE,SCrIY,GDqIA,GAAG,KAAKP,WAA1B;AC3GA,AD4GA,AnC1CF93D,EAAAA,CoClEG,IpCkEE,EAAE,IAAInC,CmC0CHy6D,QnC1CD,CAAc,GAAd,EmC0Ce,AnC1CI,GmC0CD,KAAKP,aAA5B;AC5GI,ArC4DJ,AoCiDA,AnC3C0Bx6D,IAAAA,IDNpBrJ,MoCiDAqkE,AnC3CoBh7D,EDNZ,ACMYA,GDNT1J,OoCiDC,GAAG,KAAKmkE,CpCjDO,CAAC7jE,IAAjB,CAAsBH,IAAtB,AoCiDjB,CpCjDA;AqC5DA,AD8GA,AnC5CwB,GAAnB,CAxB2C,CoC1ClB,QD8GzB8jE,WAAL,GAAmB,KAAnB,ECxIkB;AA2BlB,ArC4DA,AoCkDA,AnC5CF73D,EAAAA,CoClEG,GrC4DG/L,OoCkDC6jE,AnC5CI,CDNT,CCMW,CDNG,GCMCl6D,OmC4Cf,EnC5CW,CmC4CU,AnC5CI,IAAd,CmC4CX,CnC5C+B;AoClE3B,ArC6DAzJ,AoCkDJ,AnC7CiCmJ,IDL7BnJ,ACK6BmJ,ODLtB,CAAClJ,CoCkDP2jE,CnC7C4Bz6D,EAAAA,CDL7B,CAAe,MoCkDnB,GAAmB,IAAnB,apClD4CvJ,IAAK,EAA7C;AqC7DJ,ArC8DC,AoCmDD,AnC/C+B,GAApB,CAzBqC,CoCzCR,SDiHlC4uB,KAAK,CAACtoB,IAAN,CAAW,KAAKgd,OAAhB,EAAyBlR,IAAzB,CC5IY,CD4ImBo6C,MAA/B,EAAuChtC,IAAvC,EAA6Cxc,KAA7C,CAAN;AChHA,ApCkEFkJ,EAAAA,CoClEG,EpCkEA,EAAE,IAAIrC,SAAJ,CAAc,GAAd,CA1B6C;AoCxC5C,ArC8DJ,AoCoDA,AnC/CFsC,EAAAA,ODLUrM,CCKF,EmC+CF,AnC/CI,IAAI+J,CmC+CHm6D,QnC/CD,CAAc,EDLK,AoCoD3B,CpCpD4BhkE,ACKpB,CmC+Cc,CnC/CK,EDLA,CAAnB,GAA4B,CAACE,QAArC;AqC9DA,ArC+DH,AoCoDIkS,AnChD4B7I,IAAAA,CoCnEwB,KDmHpD6I,IAAI,AnChDwB7I,EAAAA,CmCgDrB,KAAKy6D,WAAZ,mCClHG,6DA7Bc;AA8BlB,ADkHC,AnCjD0B,GAAnB,CA3BwC,WmC4E1CzgE,OAAL,CAAaipD,MAAb,EAAqBhtC,IAArB,EAA2Bxc,KAA3B,EAAkCoP,IAAlC;ACjHD,ArC6DJ,AoCqDK,AnCjDHhG,EAAAA,CoCjEG,GrC6DC9L,OCIO,EAAE,IAAIuJ,CDJC,GAAG,KCIR,CAAc,IAAd,CA5BqC;AoCrC5C,ArC8DJtJ,ACIF8L,EDJE9L,ACIF8L,KAAK,EAAE,IAAIxC,EDJI,EAAE,KCIV,CAAc,IAAd,EAAoB,IDLN;AqC7DnB,ArC+DArJ,AoCqDA,AnClD2B+I,EDH3B/I,ECG2B+I,CoClEO,MrC+DzB,CoCqDL,CpCrDO,CCGgBA,EAAAA,CmCkDlBw6D,GpCvDU,UoCuDnB,EAAwB,YCnJN;AAgClB,ArC+DAtjE,AoCqDC,AnCnDwB,EDFzBA,CqC/DC,ApCiEI,CA7B2C,KD2BzC,EAAE,IoCqDHuF,CpCxDa,KoCwDlB,CAAYwmD,MAAZ,EAAoBhtC,IAApB,EAA0Bxc,KAA1B;ACpHG,ArCgEJtC,AoCqDC,AnCnDH4L,EDFE5L,ACEF4L,QAAQ,CDFG,CCED,CDFG,GCECzC,SAAJ,CAAc,UAAd,CA9BwC;AoCpChD,ArC4DmB,ACOrB0C,CDPF,CCOEA,GoCnE+B,KpCmEvB,EAAE,IAAI1C,SAAJ,CAAc,KAAd,EAAqB,coCnGX;AAiClB,ArCiEJ,AoCqDI,AnCpD+BN,GoClE9B,CpCkE8BA,UmCoDzBi7D,AnCpDyBj7D,EAAAA,KmCoDlB,GAAG,KAAKu6D,WAArB;ACtHI,ArCkER,AoCqDI,AnCrD6B,GAArB,CA/BwC,UmCoF1CW,OAAO,GAAG,KAAKV,aAArB;ACvHA,ArCmEJ,AoCsDI,AnCtDFv3D,EAAAA,GoCnEuC,MpCmE9B,EmCsDFs3D,AnCtDI,IAAIj6D,OmCsDb,EnCtDS,CmCsDUw6D,AnCtDI,GAAd,EAAmB,OmCsD5B,MC1JkB;AAkClB,ADyHA,AnCvD8B76D,GoClE7B,CpCkE6BA,SmCuDzBu6D,CnCvDyBv6D,EAAAA,UmCuD9B,GAAqB86D,cAArB;ACzHI,AD0HJ,AnCxD4B,GAAnB,CAhCuC,SmCwF3CN,WAAL,GAAmBO,YAAnB;AC1HA,ArCmEJ,AoCyDI,AnCzDF93D,EAAAA,GoCnEqC,CrCmEjC9L,MoCyDE6jE,EnCzDM,EAAE,GmCyDZ,CnCzDgB36D,CmCyDH,OAAOuI,CnCzDR,CDAc,ACAA,EmCyDb,CpCzDgB,CCAjB,CoCrGM,CpCqGc,UDAW5U,OAAO,CAAE,mEAAD,GAClD,4EADkD,GAElD,4EAFkD,GAGlD,iEAHkD,GAIlD,4EAJkD,GAKlD,iEALkD,GAMnD;AqCxEA,ArCyEC,AoCmDD,AnC1DkC+L,GoClEjC,CpCkEiCA,QmC0D9Bk7D,EnC1D4B,EAAEl7D,GmC0DlC,EAAa,KnC1DmB,EmC0DZ,IAAP,6CpC1DsC,GAQlD,+CARiD,CAAtD;AqClEQ,ArC2ER,AoCkDI,AnC3D8CC,IAAAA,UAAAA,EAAAA;AoClE9C,ArC4EJ,ACVoC,GAApB,CAjCoC,CoCjCN,+BAnCxB;AAoClB,ArC4EJ,AoCkDG,AnC5DDkD,EAAAA,CoClEG,CpCkED,EAAE,IAAI7C,CmC4DF,MAAMzI,EnC5DR,CmC4DH,AnC5DiB,GAAd,CmC4DegR,AnC9F+B,ImC8FjD,EAAwB;AC9HnB,ArC6ER,AoCkDI,AnC5DFzF,EAAAA,IAAI,EAAE,IAAI9C,EmC4DF/I,KAAK,EnC5DP,CmC4DWsR,AnC5DG,GAAd,CmC4DU,CAAQhR,AnC5DC,GmC4DT,CAAd;AC/HA,ArC8EJ,ACX6BoI,IAAAA,CoCnEmB,SpCmEnBA,EAAAA,mDoCvGP;AAqClB,ArC8EJ,AoCkDI,AnC9DuB,GoClEtB,ApCkEG,CAnC4C,QmCiG5C,OAAO1I,KAAP,KAAiB,QAArB,EAA+B;AChI3B,ADiIH,AnC5DH8L,EAAAA,oBAAoB,EAAE,IAAI/C,SAAJ,CAAc,OAAd,CAtC4B;AoC/BhD,ADkIC,AnC7CHgD,EAAAA,EAAE,CoCrFoC,CpCqFlC,GmC2CF,CnC3CMhD,KmC6CC,IAAItD,AnC7CT,CAAc,GAAd,CmC6Cc,CAACxF,AnC7CI,OmC6CV,CAAcD,GCvKP,EDuKP,CAAJ,EAA0B;ACjIjC,ArC8EJ,AoCoDK,AnC9CsByI,GoCpFtB,CpCoFsBA,EDNrB3I,QCMmB,CmC8Cf,CnC9CiB2I,CDNV,EoCoDHvL,CpCpDM,AoCoDL,GAAG,CAAb,EAAgBA,AnC9CI,CmC8CH,GAAG8C,GpCpDStD,EoCoDJ,CAACS,IpCpDU,CAAE,CoCoDtC,EAAkCD,CAAC,IAAI,CAAvC,EAA0C,oDpCpDL,GACrC,oEADqC,GAErC,oEAFqC,GAGrC,2EAHqC,GAIrC,0EAJqC,GAKrC,qEALqC,GAMrC,sEANqC,GAOrC,2EAPqC,GAQrC,wEARqC,GASrC,4EATqC,GAUrC,2EAVqC,GAWrC,yEAXqC,GAYrC,2EAZqC,GAarC,uEAbqC,GAcrC,kBAdoC,CAAzC;AqC9EQ,ADmIF,AnC/CiC0L,IAAAA,QAAAA,EAAAA,EmC+C7B5I,KAAK,CAAC9C,CAAD,CAAL,KAAa,IAAb,IAAqB,OAAO8C,KAAK,CAAC9C,CAAD,CAAL,CAAS4U,IAAhB,KAAyB,QAAlD,EAA4D;ACnI9D,ADoIG,AnChDkB,GAAnB,CAtD8C,CoC9Bd,aDoI3B,EAAE,MAAM,KAAKwxD,GC1KF,ED0KH,CAAWtjE,KAAK,CAAC9C,CAAD,CAAhB,EAAqBoU,IAArB,EAA2Bwc,KAA3B,EAAkCu1C,KAAlC,EAAyC/iE,GAAzC,EAA8CpD,CAA9C,CAAR,CAAJ,EAA+D;ACnIlE,ArC6FJ,AoCuCQ,AnChDN+H,EAAAA,CoCpFG,KpCoFG,CDSClF,CCTC,IAAIgJ,SDSd,ACTU,CDSc/I,ACTA,IAAd,CDSV,CCT8B,CDSC;AqC7FvB,ArC8FJ,AoCuCI9C,AnCjDwBuL,IAAAA,EDUxBxI,OAAO,CAACD,ACVc,EmCiDtB9C,AnCjDwBuL,CmCiDvB,EpCvCM,CAAX,EAAoB,ICVM;AoCpF1B,ArC+FI,AoCuCA,AnClDoCG,IAAAA,CoCpFkB,KrC+FhD5K,ECX8B4K,CDW3B,CCX2BA,EDWxB,EAAZ,kCqCtIc;AAwClB,ADsIG,AnCnDuB,GoCnFzB,ApCmFK,CAvD0C;AoC5B5C,ArC+FA,AoCwCF,AnCnDJoD,EAAAA,MAAM,CDWK,CCXH,GDWO9O,CAAC,ACXJ6L,GDWO,CAAb,EAAgB7L,CAAC,ECXf,CDWkB8C,ACXJ,KDWS,CAAC7C,CCXxB,EAAuB,GDWzB,EAAkCD,CAAC,EAAnC,EAAuC;AqC/F3C,ArCgGQ,AoCwCP,AnCpD8B2L,IAAAA,CoCpFQ,ID+HhC,CnC3CsB,EDYf3I,ACZiB2I,GmCoDxB,CpCxCW,ECZW,CDYR7I,AoCwCVA,KpCxCe,AoCwCV,CpCxCW9C,CAAD,CAAlB,EoCwCa,IAAV,IAAkB,OAAO8C,KAAK,CAAC8R,IAAb,KAAsB,QAA5C,EAAsD,CCxIvB,GACjC,uEADiC,GAEjC,kCA1Ca;AA2ClB,ArC8FQ,AoCwCP,AnCrDsChJ,GoCjFtC,CpCiFsCA,OAAV,CDaf3I,CCbyB2I,GmCqDhC,InCrDsB,CmCqDjBw6D,CpCxCY,GAAGvjE,CoCwCpB,CAAWC,KAAX,EAAkBsR,IAAlB,CpCxCkC,CAAClR,AoCwCX0tB,KAAxB,EAA+Bu1C,CpCxCY,CAACnjE,GoCwC5C,CpCxC2C,CAAR,AoCwCGI,GpCxCcD,AoCwCpD,EAA2C,IAA3C,CAAN,SpCxC0E,CAACH,IAAD,CAAjC,GAA0CA,IAA3C,CAAjC;AqC9FJ,ADuIH,AnCtD+CwI,IAAAA,UAAAA,EAAAA;AoCjFhD,ArC+FQ,AoCyCR,AnCvD6B,GAAvB,CAxD0C,CoCzBL,KrC+F/BvI,UAAJ,EAAgB,aqC1IN;AA4ClB,ArC+FY,ACdd8L,EAAAA,CoCjFG,GpCiFC,EAAE,IAAIlD,CDcS,MAAMzI,ECdnB,CDcQ,ACdM,GAAd,CDc0BH,CCdP,SDcX,EAA8B;AqC/FtC,ArCgGYnC,AoCyCjB,AnCxD0ByK,IAAAA,MDeTzK,AoCyCbqlE,GpCzCgB,CAAC/iE,ACfG,CmCwDxB,CnCxD0BmI,CDeN,AoCyCT,CpCzCM,GAAWtI,KCfJ,KDec,CAACG,GAAD,CAArB;AqChGhB,ArCiGa,AoCyCb,AnCzDqCuI,IAAAA,CoCjFkB,KpCiFhC,EAAcA,EmCyD/B46D,InCzDiB,QmCyDL,GAAG,KAAKP,WAA1B,gCC1IsD,GACjD,+CA7Ca;AA8ClB,ArCgGS,AoCyCT,AnC1D6Cx6D,GoC/E5C,CpC+E4CA,UmC0DvC86D,AnC1DuC96D,EAAAA,YmC0DzB,GAAG,KAAKu6D,aAA5B;ACzII,ArCiGC,AoCyCL,AnC3DuB,GAAnB,CAzD4C,SmCoH3CC,WAAL,GAAmB,IAAnB;AC1IA,AD2IA,AnC3DFh3D,EAAAA,GoChFkC,EpCgF7B,EAAE,ImC2DA+2D,AnC3DIl6D,SAAJ,CAAc,GmC2DnB,AnC3DK,EAAmB,CmC2DH,KAArB,8BCzLkB;AA+ClB,ArCiGI,AoC2CJ,AnC7D0BN,GoC/EzB,CpC+EyBA,ODkBfzK,GAAP,AoC2CEqlE,AnC7DkB,EAAE56D,GmC6Df,CAACjD,IAAN,CAAW,CnC7DO,ImC6DFgd,OAAhB,EAAyBlR,IAAzB,EAA+Bo6C,MAA/B,EAAuChtC,IAAvC,EAA6Cxc,KAA7C,CAAN;AC5II,ArCkGH,ACnBqC2G,GDOtC,CCPsCA,KDoBjC,CCpBmB,EAAcA,CDoB7BtI,KCpBe,GDoBP,CAACP,KAAD,CAAZ,EAAqB;AqCnG1B,ArCoGI,AoC0CJ,AnC/D8C0I,IAAAA,CoC/ET,MrCoG1B1I,CoC0CP,EnC/D0C0I,EDqB1C,ACrB0CA,CmC+DrCw6D,WAAT,EAAsB,OC7LJ;AAgDlB,ArCoGC,AoC0CA5xD,AnChEuB,GoC9EvB,ApC8EI,CA1D2C,MmC0H/CA,IAAI,GAAG,KAAK4xD,WAAZ;AC9IG,ArCqGP,AoC0CI,AnChEH/2D,EAAAA,QAAQ,EAAEtC,GmCgEFpH,OAAL,CAAaipD,AnChEK,CAAC,IAAD,CmCgElB,CnChEyB,CmCgEJhtC,AnChEH,CA3D6B,GmC2H/C,EAA2Bxc,KAA3B,EAAkCoP,IAAlC;AC/ID,ADgJC,AnChEHlF,EAAAA,GoChF8C,cpCgF7B,EAAEvC,WAAW,CAAC,IAAD,EAAO,CAAP,CA5DoB,yBoCpE9B;AAiDlB,ArCqGJ,ACrBEwC,EAAAA,CoChFG,GrCqGC7L,KCrBK,EAAEqJ,QDqBQ,GAAG,ACrBA,CAAC,IAAD,EAAO,CAAP,CA7D4B,MDkFpD;AqCrGQ,ArCsGR,AoC2CI,AnChEFyC,EAAAA,IDqBI7L,MoC2CE,AnChEI,EAAEoJ,GmCgEDo5D,QpC3CY,ACrBA,CAAC,EDqBE,EoC2CxB,AnChEqB,EmCgEG,AnChEI,CAAP,CA9D2B,CDmFpD;AqCtGI,ADkJC,AnChEH12D,EAAAA,GoClF2C,MpCkFlC,EAAE1C,EmCgEH3E,MAAL,CAAYwmD,EnChEO,CAAC,GmCgEpB,AnChEmB,EmCgEChtC,AnChEK,CAAN,CA/D4B,EmC+H/C,EAA0Bxc,KAA1B,sDCnMiB;AAkDlB,ArCsGJ,AoC4CK,AnChEHsK,EAAAA,CoClFG,MrCsGInM,GCpBG,EAAEwJ,WDoBd,ACpByB,CDoBCnJ,ACpBA,GAAD,EAAM,CAAN,CDoBzB,ACpFoD,EDoFjB;AqCtG3B,ArCuGJ,ACpBF+L,EAAAA,MDoBQ9L,GAAG,CCpBD,EDoBI,ACpBFkJ,EDoBV,SCpBqB,CAAC,GAAD,EAAM,CAAN,CAjE2B;AoClBhD,ArCwGAnJ,AoC4CA,AnChEFgM,EDoBEhM,ACpBFgM,GoCpFoC,IrCwG3B,CAACzP,ACpBF,EAAE4M,EmCgEF85D,CpC5CN,CAAcnjE,KoC4CD,EnChEM,CmCgEH,AnChEI,KmCgECyiE,EpC5CrB,EAA+BriE,MCpBZ,CDoBnB,CAAuCV,ACpBF,CmCgErC,AnChEmB,CAlE6B,CoCpE9B,CrC0JyB,IAAI;AqCvG/C,ArCwGI,AoC6CJ,AnCjEFyM,EAAAA,CoCpFG,KrCwGOzM,IAAJ,ACpBI,CmCiEHgjE,CpC7CS,ACpBJr5D,UmCiEV,CnCjEqB,CAAC,CmCiEH45D,UnCjEE,EmCiErB,AnCjEmC,CAAd,CAnE2B;AoCjB5C,ArCyGI,AoC6CR,AnCjEF72D,EAAAA,QAAQ,EDoBQ/L,ACpBNgJ,CmCiEHo5D,EpC7CY,GAAG/iE,IAAI,CAACjD,ACpBN,CAAC,EmCiEpB,EpC7CoB,CAAWwD,AoC6CV+iE,MnCjEF,EAAc,CAAd,CApE6B,ImCqIhD,KpC7CoB,CAAZ;AqCzGR,ArC0GQ3iE,AoC8CR,AnClEFgM,EAAAA,GoCtF6C,CrC0GnChM,GAAG,ACpBN,CDoBO1D,CCpBL,CmCkEHwmE,GnClEO56D,CDoBH,GAAa,AoC8CrB,CpC9CQ,CoC8CK,GnClEN,CDoBoBpI,ACpBN,GDoBS,AoC8CV,CpC9CWE,CCpBxB,EDoB2B,AoC8CrB,AnClEe,CDoBO,CAAD,CAAH,CAAOC,IAAP,EAAD,CAAH,GAAqBD,GAAG,CAAC,CAAD,CAAH,CAAOC,EqC7JrC,ErC6J8B,EAAxC;AqCzGR,ArC0GK,AoC8CL,AnCnE8B2H,IAAAA,UAAF,EAAEA,UAAF;AoCpF5B,ArC0GC,AoC8CF,AnCpE2CY,GoCpFzC,ArCqGD,CCjB0CA,KAAK,EAAE,CAArB;AoCpFxB,ArC2GJ,ACvBoDR,IAAAA,KDuB7ClI,CCvBqB,EDuB5B,ACvBoDkI,MAAxB;AoCpF5B,ArC4GH,AoC8CC,AnCtE8DH,IAAAA,CoCpFrB,MD0JlC4I,GnCtEuD5I,CmCsE9D,CnCtE8DA,6DoCzI1C;AAsDlB,AD0JF,AnCvE8B,GoCnF3B,ApCmFM,CArEyC;AoCd5C,ArC4GR,ACvBEoE,EAAAA,MAAM,CDuBC/L,CCvBC,IAAIgI,SDuBd,ACvBU,CDuBc/H,ACvBA,GAAd,EAAmB,CDuB7B,EAAgC;AqC5G5B,ArC6GA,AoClDsC,AnC0BXyH,IAAAA,CoCrFc,CrC6GrC9H,GAAG,GAAG,EAAV,ACxByB,EAAE8H,UAAF,uCoC3IP;AAuDlB,ApCoFuCY,GoCpFtC,CpCoFsCA,KAAK,EAAE,EAArB;AoCpFrB,ArC6GJ,AoC+CJ,AnCxEsDX,IAAAA,EDyB9C,CAAC1H,EoC+CA6iE,IpC/CL,AoC+CJ,CAAczB,AnCxEwC15D,CDyBrC,CCzBqCA,CmCwEtD,EAAmB06D,MAAnB,EAA2B;AC5JvB,ArC8GI,AoC+CP,AnCzE4B,GAAnB,CAvE0C,CoCbL,GD6JxCU,GpC/CQnjE,GAAP,EoC+CO,GAAG,IAAIwiE,eAAJ,CAAoBC,MAApB,CAAjB,iDCpNqB;AAwDlB,ArC8GC,AoC+CJ,AnCxECr2D,EAAAA,CoCrFG,GpCqFC,EAAE,CmCwEA+2D,GnCxEI/6D,KmCwEI,CAACu6D,GnCxET,CAAc,CmCwEd,CAAelB,CnCxEf,EmCwEA,AnCxEmB,EmCwEC,IAApB,EAA0BgB,MAAM,CAACt1C,KAAjC,EAAwCs1C,MAAM,CAACC,KAA/C,CAAP;AC7JO,AD8JP,AnCzE4Bh6D,IAAAA,KAAK,EAAE;AoCrFhC,ArC+GA,AC1BuB,GAAnB,CAzE4C,CoCZV,ErC+GjC,MAAM/I,GAAX,IAAkBU,MAAlB,EAA0B;AqCvKR,ArCwKd,AoCgDR,AnC1EEgM,CoC9IF,CpC8IEA,KAAK,EAAEnD,CD0BK7J,KAAK,AoCgDJ+jE,GpChDO/iE,EC1BF,CAAC,GD0BO,AoCgD5B,AnC1EoB,CD0BSV,AoCiD5B8hE,CnC3EyB,ED0BE,AoCgD5B,AnC1EoB,CD0BZ,ACpG4C,CmCsJnDgB,MAFD,EAGE;AChKF,ArC8GQ,AoCmDP,AnC7ECn2D,EAAAA,IoCpFIq3D,EDiKCR,EpCnDO7iE,AC1BJ,EAAE,EoCpFE,EDiKC,AnC7EC8H,CoCpFCw7D,EDiKC,ICjKK,ArC8GI,AoCmDLX,CCjKG,CpCoFb,CD0BkBtjE,AC1BJ,GD0BO,CAACY,AC1BtB,EAAoB,OmC6Ed,CpCnDY,AoCmDSkiE,CpCnDO,CqC9GI,GrC8GpB,CoCmDZ,CAAjB,EpCnDoD9iE,GAAvB,EqC9GN,CrC8GmCa,EqC9GQ,OrC8GC,CAACb,EqC9G7C,CrC8G4C,CAA5D,CqC9GwE,EAAzD,CAAvB;ADkKC,AnC7EGmI,IAAAA,KmC6EI,KnC9EwB,CmC8ElBq7D,CnC7EVr7D,OmC6EkB,CAAC66D,EnC9ES,GmC8ElB,CAAelB,GAAf,EAAoB,IAApB,EAA0BgB,MAAM,CAACt1C,KAAjC,EAAwCs1C,MAAM,CAACC,KAA/C,CAAb;ACjKD,ArC8GQ,AoCoDP,AnC7EGh6D,IAAAA,EoCrFEm7D,ErC8GMpkE,CCzBH,EAAE,EAFqB,CoCnFlB,ErC8GM,CqC9GHmkE,ArC8GIvkE,KAAD,CqC9GG,ArC8GX,CqC9Ga,GrC+GZ,OAAOA,KAAP,GqC/GqC,ErC+GpB,QAAjB,EqC/GW,ErC+GkBH,CqC/GyB,UAA3C,GAAwD,EAAzD,CAAvB,OrC+GkE,CAACoB,aAAD,CAD1D,EAC4E;AACxE,AC1BRmI,IAAAA,gBAAgB,EAAE;AoCrFtB,ArCgHYzI,AC9BoB,GAApB,CA3EwC,EoCP9C8jE,ArCgHM9jE,GAAG,IAAK,CqChHN,ErCgHQM,CqChHLsjE,MAAM,CAAE,KrCgHW,IAAGvkE,KAAM,GAAjC,CqChHsC,YAA1B,GAA2C,UAA3C,GAAwD,EAAzD,CAAvB;ArCiHS,ACtBPkN,EAAAA,MAAM,EAAEzD,aAAa,CAAC,OAAD,CApF6B;AoCNpD,ArCiHK,ACtBH0D,EAAAA,IoC3FIu3D,CpC2FC,EAAEj7D,OoC3FO,GAAG86D,GpC2FG,CAAC,EoC3FE,CAAE,GpC2FL,EAAS,aoC3FqB,YAA1B,GAA2C,WAA3C,GAAyD,EAA1D,CAAzB;ApC2FiC97D,IAAAA,UAAAA,EAAAA;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E,AC9Dd0M,EAAAA,CoCrFG21D,KrCmJWriE,CC9DP,EoCrFL,ApCqFOwH,GoCrFM,CrCmJM,GAAG,MqCpJJ,ApCsFE,CAAC,CD8DT,OC9DQ,CA7G4B;AoCyBhD,ArCmJY,AC9DdmF,EAAAA,CoCrFG41D,MpCqFI,EoCrFL,ApCqFO/6D,GoCrFM,UAFK,ApCuFE,CAAC,QAAD,EAAW;AoCpF/B,ApCoFiCf,GoCpFhC+7D,CpCoFgC/7D,OoCpFjC,GAAa,ApCoFoBA,EAAAA,QoCvFf;AAIlB,ArCkJQ,AC/DuB,GoCnF9Bg8D,ApCmFmB,CA9G4B,OD6KnC,EqClJb,ArCkJQ,GqClJO,WAJG;AAKlB,ArCiJiB,AC9DnB71D,EAAAA,CoCnFG81D,IpCmFE,EAAEl7D,SoCnFL,GAAoB,CpCmFF,CAAC,MAAD,EAAS,MoCxFT;AAMlB,ArCiJYxH,AC/DiByG,GoClF5Bk8D,CpCkF4Bl8D,ID+DjBzG,KqCjJZ,CpCkF6ByG,CD+DV,CqCjJJ,ApCkFcA,ED+DP,OAAV,EqCvJM;AAOlB,ArCiJY,AChEe,GoCjF1Bm8D,ApCiFiB,CA/G8B,WoC8BhD,GAAiB,aAPC;AAQlB,ApCiFF/1D,EAAAA,CoCjFGg2D,IpCiFE,EAAEr7D,MoCjFL,GAAiB,IpCiFC,CAAC,MAAD,EoCzFA,ApCyFS;AoChF3B,ArCgJQ,AChEqBf,GoChF5Bq8D,CpCgF4Br8D,ODgEhB,EAAL,CChEqBA,EAAAA,CoChF7B,GAAmB,oBATD;AAUlB,ArC+IiB,AChEU,GoC/E1Bs8D,ApC+EiB,CAhH8B,UoCiChD,GAAgB,iBAVE;AAWlB,ArC+IY/iE,AChEd8M,EAAAA,CoC/EGk2D,KrC+IWhjE,AChER,EAAEwH,KDgEa,CqC/InB,ErC+IsB,CqC/IJ,IpC+EC,CAAC,CDgER,MChEO,EAAU,KoC1FX;AAYlB,ArC+IY,ACjEmBf,GoC9E9Bw8D,CpC8E8Bx8D,UAAAA,EAAAA,IoC9E/B,GAAsB,kBAZJ;AAalB,ApC6E6B,GoC7E5By8D,ApC6EkB,CAjH6B,wBoCoChD,GAA8B,yBAbZ;AAclB,ArC8IQ,ACjEVn2D,EAAAA,CoC7EGo2D,EpC6EA,EAAE37D,IDiEU,EAAL,OqC9IR,ApC6EgB,CAAC,EoC7EK,EpC6EN,EAAO,coC3FL;AAelB,ArC6IiB,ACjEQhB,GoC5ExB48D,CpC4EwB58D,UAAF,EAAEA,EoC5EzB,GAAoB,KpC4EG,WoC3FL;AAgBlB,ArC6IYxG,AClEyBoH,GoC3EpCi8D,CpC2EoCj8D,IDkEzBpH,CClE8B,EAAE,GoC3E5C,CrC6ImB,EqC7IH,CrC6IM,MAAV,KqC7JM;AAiBlB,ArC6IY,ACnEW,GoC1EtBsjE,ApC0Ee,CAlHgC,UoCwChD,GAAgB,YAjBE;AAkBlB,ApC0EFt2D,EAAAA,CoC1EGu2D,UpC0EQ,EoC1ET,ApC0EW/7D,GoC1EM,UpC0EO,CAAC,EoC5FP,UpC4FM,EAAe;AoCzEvC,ArC4IQ,ACnEiChB,GoCzExCg9D,CpCyEwCh9D,ODmE5B,EAAL,CCnE+B,EAAEA,IoCzEzC,GAAsB,GpCyEiB,coC5FrB;AAoBlB,ArC2IiB,ACnEoCY,GoCxEpDq8D,CpCwEoDr8D,KAAK,EAAE,GoCxE5D,GAAgB,YApBE;AAqBlB,ArC2IYpH,ACpE2B,GoCvEtC0jE,ApCuEuB,CAnHwB,IDuLpC1jE,MqC3IZ,CrC2ImB,EqC3IH,CrC2IM,MAAV,KqChKM;AAsBlB,ArC2IY,ACpEdiN,EAAAA,CoCvEG02D,MpCuEI,EoCvEL,ApCuEOn8D,GoCvEM,UAtBK,ApC6FE,CAAC,QAAD,EAAW;AoCtE/B,ApCsEiChB,GoCtEhCo9D,CpCsEgCp9D,SoCtEjC,CpCsE+B,EoCtEhB,ApCsEkBA,UAAF,EoC7Fb;AAwBlB,ArC0IQ,ACrEqCI,GoCrE5Ci9D,CpCqE4Cj9D,MAAd,EAAcA,KoCrE7C,CpCqE+B,EoCrEZ,cAxBD;AAyBlB,ArC0IY,ACtEyCH,GoCpEpDq9D,CpCoEoDr9D,UAAAA,EAAAA,KoCpErD,GAAuB,kBAzBL;AA0BlB,ArCwHI,ACrD2B,GoCnE9Bs9D,ApCmEmB,CApH4B,YoCiDhD,GAAkB,aA1BA;AA2BlB,ApCmEF72D,EAAAA,CoCnEG82D,IpCmEE,EAAEx8D,MoCnEL,GAAiB,IpCmEC,CAAC,MAAD,CoC9FA,CpC8FS;AoClE3B,ArCyII,ACvEyBhB,GoClE5By9D,CpCkE4Bz9D,IDuErBtG,MCvEmB,EoClE3B,ApCkE6BsG,CDuEZ,EqCzIC,GrCyIIvG,ICvEK,CDuEvB,EAAyB,GqCrKX;AA6BlB,ArCyIQF,ACxEiC6G,GoCjExCs9D,CpCiEwCt9D,EDwEjC7G,IAAI,ACxEe,CoCjE3B,CpCiEyC6G,EoCjE5B,ArCyIGlM,GAAG,CAAC0F,ACxEO,SDwEX,CAAcF,SAAd,EAAyBD,KAAzB,CAAR;AqCtKU,ArCuKb,ACzE4CwG,CoC9FrD,GpC8FqDA,UAAAA,EAAAA;AAAtB,GAAT,CArH8B;AD+L5CvG,ACzENiN,EAAAA,EDyEMjN,KCzEC,EAAEsH,EDyEM,GAAGvH,KAAK,GAAG,ACzEJ,CDyEhB,ACzEiB,QAAD,EAAW;AoChEnC,ArC0IQF,AC1E6ByG,ID0E7BzG,AC1E6ByG,ID0EzB,CqC1IH49D,GrC0IOpkE,EC1EmB,EAAEwG,GD0E7B,OC1E2B,KoChEnC,CAAgC69D,OAAhC,EAAyC;AACrCxpE,ArC0IC,AC3E4C+L,EoC/D7C/L,EpC+D6C+L,IoC/DvC,CAAC09D,CpC+DwB,EAAc19D,MAAd,YoC/D/B,CAA6By9D,OAA7B,EAAsC1lE,OAAtC,CAA8C4lE,CAAC,IAAI;AAC/CJ,ApC8DiD19D,IoC9DjD09D,ApC8DiD19D,UAAAA,EAAAA,CoC9DpC,CAAC89D,CAAD,CAAb,GAAmBF,OAAO,CAACE,CAAD,CAA1B;AACH,ArCyID,AC5E+B,GoC/D/B,ApC+DoB,MD4EbrkE,SAAS,KAAKD,KAAd,GAAsBF,IAAI,GAAGrF,GAAG,CAAC0F,SAAJ,CAAcF,SAAd,EAAyBD,KAAzB,CAA7B,GAA+DF,IAAtE;AqCxIH,ArCyIA,ACnMmD,EoC4DpD,ArCwIA;AqCvIA,AnC5IO,IAAMqN,SAAS,GAAG,wBAAlB;AmC6IP,AnC5IO,IAAMC,UAAU,GAAG,IAAIC,MAAJ,CAAWF,SAAS,CAAC1R,MAArB,EAA6B,GAA7B,CAAnB;AmC6IP,ArCsIA,MAAM2E,cAAc,GAAG,0BAAvB;AEhRO,SAASkN,SAAT,CAAmBC,IAAnB,EAA0C;AFiRjD,AEhRE,SFgROlN,CEhRCkN,IAAR,YFgRF,CAA2BjN,GAA3B,EAAgC;AqCtIhC,ArCuII,AEhRA,MmCyIEikE,GrCuIKjkE,AEhRP,EAAA,CFgRU,CqCvID,ArCuIEC,GqCvIC,IrCuIL,CAAYH,cAAZ,EAA4B,EAA5B,CAAP;AqCtIA3E,ArCuIH,AEhRG,EmCyIAA,MAAM,CnCzIN,CmCyIQ,CnCzIR,CmCwIY;AAEZC,AnCzIA,EmCyIAA,KAAK,EAAE,AnCzIP,IAAA;AmCyISM,ArCwIb,AEhRI,ImCwISA,IAAI,CrCwIRwE,AEhRL,CmCwIe,CAAR,EnCxIP,cFgRJ,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;AqCxIZkN,ArCyIlB,AEhRE,ImCuIgBA,ErCyIdnN,CAAC,CAACxF,EqCzIkB,EAAE,CAAnB,AnCvIE,CFgRL,GEhRF,EFgReyF,CAAC,CAACzF,MAAnB,EACI,OAAO,KAAP;AqC1IyBiT,ArC2I7B,IqC3I6BA,ErC2IzBvN,IqC3I+B,CrC2I1B,CqC3I4B,ErC2IzB,IAAZ;AqC3IO,AnCrIP,GmCmIY;AAGZhF,ArC2IA,AEhRE,EmCqIFA,GAAG,EAAE,ArC2IA,IAAIX,CAAC,CEhRD,EFgRI,CAAb,EAAgB2F,AEhRd,KFgRmB,IAAI3F,CAAC,GAAGyF,CAAC,CAACxF,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AqC3IrCgB,ArC4IH2E,AEzRN,ImC6IS3E,ArC4IH2E,IqC5IO,CrC4IF,CqC5II,CAAR,CrC4IOC,UAAU,CAACH,CAAC,CAACzF,CAAD,CAAF,EAAO0F,CAAC,CAAC1F,CAAD,CAAR,CAAlB;AqC5IY4S,ArC6If,AEhRJ,ImCmImBA,MAAM,EAAE,CAAnB;AAAsBM,IAAAA,MAAM,EAAE;AAA9B,ArC8IL,AE/QG,IAAMV,KF+QF7M,KAAP,IE/QuB,GAAG,+BAAvB;AmC8HS,ArCkJf,CqClJD;AnC3HO,SAAS8M,YAAT,CAAsBF,IAAtB,EAA6C;AF8QpD,AE7QE,SF6QO3M,CE7QC2M,IAAR,KF6QF,CAAoB9M,CAApB,EAAuBC,CAAvB,EAA0B;AqC9I1B,ArC+II,AE7QA,MF6QID,CAAC,EqC/IA+jE,AnC9HA,GF6QK9jE,CAAV,EACI,AE9QJ,ImC8HJ,CAAoB8sC,ErCgJL,IAAP,EqChJR,EAA8Bx+B,GAAG,GAAGu1D,OAApC,EAA6C;AACzC,ArCgJA,AE9QA,MF8QI1jE,GqChJG,AnC9HF,MAAL,CF8Qc,GAAGC,MAAM,CAACL,CAAD,CAAvB;AqC/IImP,ArCgJJ,AE9QA,ImC8HIA,ErCgJA7O,EqChJI,CnC9HH,CmC8HK,KnC9HV,CF8Qc,GAAGD,MAAM,CAACJ,CAAD,CAAvB;AqChJY,AnC7HZ,SAAA,EAAA;AmC4HO,ArCkJP,AE7QA,MF6QIG,GE7QJ,GAAA,IF6Qc,IAAIE,UAAlB,EAA8B;AqChJ1BysC,ArCiJA,AE7QJ,ImC4HIA,KnC5HJ,EF6QW3sC,CqCnJJ,CnC1HP,QF6QqB,IAAIE,UAAd,GAA2BN,CAAC,CAACO,OAAF,OAAgBN,CAAC,CAACM,OAAF,EAA3C,GAAyD,KAAhE;AqChJAojE,ArCiJH,AE7QD,ImC4HIA,KnC5HC,EmC4HM,EAAE,EAHN,AnCzHP;AmC6HIK,AnC5HJ,ImC4HIA,KnC5HC,KmC4HS,CnC5Hd,CmC4HgB,EAJT;AAKHxnD,ArCgJJpc,AE5QA,EF4QAA,EqChJIoc,KnC5HC,GF4QK,EqChJI,CrCgJDlf,AE5Qb,CmC4HgB,EALT,IrCqJa,CAAC0C,CAAD,CAApB;AqC/IIikE,ArCgJJ3jE,AE5QA,EF4QAA,EqChJI2jE,KnC5HC,CmC4HK,EAAE,ArCgJF,EqCtJH,CrCsJM3mE,AE5Qb,OF4QoB,CAAC2C,CAAD,CAApB;AqC/IIikE,AnC5HJ,ImC4HIA,KnC5HC,EmC4HM,EAAE,EAPN,AnCrHP;AmC6HIC,ArC+IJ,AE3QA,ImC4HIA,ErC+IA/jE,GE3QC,CmC4HK,EAAE,CARL,EnCpHP,CF2Qc,IAAIE,UAAlB,EAA8B;AqC9I1B8jE,ArC+IA,AE3QJ,ImC4HIA,KAAK,AnC5HJ,EmC4HM,ArC+IAhkE,CqCxJJ,GnCnHP,MF2QqB,IAAIE,UAAd,GAA2BP,kBAAkB,CAACC,CAAD,EAAIC,CAAJ,CAA7C,GAAsD,KAA7D;AqC9IAokE,ArC+IH,AE3QD,ImC4HIA,KnC5HC,MmC4HU,AnC5Hf,EmC4HiBn1D,SAVV;AAWHX,AnC5HJ,ImC4HIA,KnC5HC,MAAL;AmCiHO,ArC0JPnO,AE1QA,EF0QAA,CqC1JA,MnChHK,GF0QK,GAAGxC,AE1Qb,QF0QqB,CAACoC,CAAD,CAArB;AqC7IH,ArC8IGM,AE1QA,EF0QAA,OE1QK,GF0QK,GAAG1C,AE1Qb,QF0QqB,CAACqC,CAAD,CAArB;AEzQA,SAAK,MAAL;AmC4HJ,ArC8II,AEzQA,MFyQIG,GqC9ICkkE,AnC3HA,MAAL,CFyQc,IAAIhkE,IqC9ItB,CAAyBuf,KrC8IrB,EqC9IJ,ArC8IkC,EqC9IAiwC,GAAlC,EAAuCyU,KAAvC,EAA8Cx3B,QAA9C,EAAwDy3B,SAAxD,EAAmEC,YAAnE,EAAiFjoD,UAAjF,EAA6FkoD,OAAO,GAAG,KAAvG,EAA8GC,eAAe,GAAG,KAAhI,EAAuIp2D,GAAG,GAAGu1D,OAA7I,EAAsJ;AAClJ,ArC8II,AEzQJ,MmC2HIjkD,GnC3HC,ImC2HL,EAAa,AnC3Hb;AmC4HI,ArC8IA,AEzQJ,QmC2HQ6kD,ArC8IA,CAACtkE,AEzQJ,MmC2HD,AnC3HJ,EmC2HiB,ErC8IT,IAAe,CAACE,UAApB,EAAgC;AqC7I5Buf,ArC8IA,AEzQN,MmC2HMA,OAAO,ArC8IA,AEzQN,CmC2HO+kD,GnC3Hd,CFyQM,EqC9IA,CAAe3C,UAAf;AACApiD,ArC8IH,MqC9IGA,OAAO,CAAC+kD,MAAR,CAAe1C,YAAf;AACH,AnC3HL,KmCwHI,MAIK;AACDriD,ArC4IJ,AExQF,MmC4HMA,IrC4IErf,GqC5IK,AnC5HN,CmC4HOokE,InC5Hd,EmC4HM,ArC4IY,CqC5IGzC,ErC4IAhoE,MAAM,CAACsG,GqC5ItB,CrC4Ie,CAAYT,CAAZ,EAAexF,MAAlC;AqC3IC,ArC4ID,AElSN,UFkSYkG,UAAU,GAAGvG,MAAM,CAACsG,IAAP,CAAYR,CAAZ,EAAezF,MAAlC;AEvQP;AmC4HO,ArC4IA,QqC5IIgiB,ArC4IAhc,UqC5IJ,ArC4Ic,EqC5IE,GrC4IGE,UAAnB,EAA+B;AqC3I3Bmf,ArC4IA,IGpTC5S,EkCwKD4S,OAAO,ArC4IA,CqC5IC+kD,ClCpKlBv+D,GHgTU,EqC5IA,CAAeq8D,YlCpKbnnE,GkCoKF,ClCpKV8K,EAA0B6G,GAA1B7G,EAAuC;AkCqKhC,ArC4IA,AGjTgC;AkCsKpC;ArC4IG,AGlTiC,OAHvC9K,EHqTW,EGlT4B,GAAA,CHkTtBoC,GAAX,CGlTiC,CAAA,EHkTfqC,CAAlB,EAAqB;AqC3IzB,ArC4IQ,AGnT6B,OAFvCmN,EkCyKS,GrC4IOxM,CGnTuB,GAAA,GHmThB,EGnTgB,CHmTbX,AGnTa,CHmTZ,CAACxD,cAAF,CAAiBmB,GAAjB,CAAhB;AqC3IJwR,ArC4II,AGnTR,IkCuKIA,GlCvKC5T,CkCuKG,EAAE,ClCvKV,CHmTcqF,EGnTFrF,IAAZ,CHmTqB,GAAG0E,CAAC,CAACzD,cAAF,CAAiBmB,GAAjB,CAAhB;AqC5IK,AlCtKb,OAAKwP,MAAL,GAAcD,GAAd;AkCqKO,ArC8IC,AGlTT,UHkTcvM,OAAO,IAAI,CAACC,OAAb,IACC,CAACD,OAAD,IAAYC,OADb,IAEA,CAACT,UAAU,CAACH,CAAC,CAACrC,GAAD,CAAF,EAASsC,CAAC,CAACtC,GAAD,CAAV,CAFf,EAEiC;AqC9IrCmyD,ArC+IQ,IqC/IRA,GAFG,QrCiJY,KAAP;AqC9IRyU,ArC+IK,IqC/ILA,AlCpKKn3D,KkCiKF,YlC3JT/G,wBAAYpL,KAAZoL,EAA6BnL,GAA7BmL,EAA6C;AkC+JvC0mC,ArC+IC,AG9SsC,IkC+JvCA,QAJG;AAKHy3B,ArC+IH,IqC/IGA,SALG;AAMHC,AlCjKuC,IkCiKvCA,GlCtKNxpE,KAK6C,GAAA,CkC2JpC,IlC3JoC,CAAA;AkCkKvCuhB,ArC8IJ,AGhT2C,IkCkKvCA,GlCtKNthB,EHoTSU,CGhToC,GAAA,CkC2JpC,CrCqJM,CAACoE,CAAD,CAAN,AGhToC,CAAA,IHgTtBpE,MAAM,CAACqE,CAAD,CAA3B;AqC7IIykE,ArC8IP,AGjT8C,IkCmKvCA,GlCtKNr3D,IkC8JS,IlC3JoC,GAAA,KAAA,CAAA;AkCoKvCs3D,AlCpKuC,IkCoKvCA,GlCtKNr3D,YkC6JS,ElC3JoC,GAAA,KAAA,CAAA;AkCqKvCiB,ArC6IR,AGjTI,IkCoKIA,GlCpKCtT,EHiTA4F,GGjTL,GAAa5F,KAAb,CHiTJ,CAAsB6F,GAAtB,EAA2BrG,GAA3B,EAAgC;AqCvJrB,ArCwJP,AGhTA,GkCwJA,IlCxJKS,EHgTE4F,CGhTP,EHgTU,CAACC,AGhTA7F,GAAX,MHgTO,CAAcqC,IAAI,IAAI4C,UAAU,CAAC5C,IAAD,EAAO9C,GAAP,CAAhC,CAAP;AqC5IH,ArC6IA,AGhTE;AHkTH;AqC9IA,ArC+IA,AG1SO,SkC2JEoqE,AlC3JOt3D,WAAT,CAAqBC,KAArB,EAAoCC,EkC2J3C,CAA+BmB,GlC3JxB,EAA8D,GkC2JrE,EAAyCL,GAAG,GAAGu1D,OAA/C,EAAwD;AACpD,ArC+IJ,AG1SE,MAAIvoE,GkC2JK,ClC3JD,GAAG,CAAX;AkC4JM4T,ArC+IR,AG1SE,IkC2JMA,ElC3JFzB,EkC2JM,EAAE,KlC3JC,GAAG,CAAhB;AkC2Je,AlC1Jf,MAAIvO,KAAJ;AkCyJS,AlCxJTwN,EAAAA,UAAU,CAACnN,SAAXmN,GAAuB,CAAvBA;AkC0JM4B,ArC+IR,IqC/IQA,ErC+IFvN,CqCjJK,crCiJU,GAAIvG,GAAD,IAAS;AqC9IzBmU,ArC+IJ,AGzSF,IkC0JMA,KrC+IGnU,AGzSF,CAAC0E,EHySI,GGzSC,CHySG,EGzSAwN,EHySP,GACD,EADC,GAED/O,AG3SkB,CAACwB,IAAXuN,CAAgBa,EH2ShB,CAAC/S,EG3SDkS,CH2SA,AG3ST,CH2SC,GACI1L,CG5S+B9B,GH4S3B,CAAC+B,CG5S+B,CAAC3B,KAANJ,EH4S/B,CAAe1E,AG5S8BgT,GH4S7C,EAAoBtM,CG5ShC,EAAiE,KH4SrD,EAA8B,CAA9B,CADJ,GAEIvF,MAAM,CAACnB,GAAD,CAJhB;AqClJO,ArCuJV,AG7SGc,CHuSJ,EqCjJI,ClCtJAA,IAAI;AkC2JP,AlC1JGmS,IAAAA,SAAS,GAAGf,UAAU,CAACnN,SAAvBkO;AACD;AkC0JH,SAASo3D,sBAAT,CAAgCn1D,UAAhC,EAA4CpB,GAAG,GAAGu1D,OAAlD,EAA2D;AACvD,ArCiJJ,AG1SE,MH0SI3iE,GqCjJK,A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D,IAAI,EvB3fF,CuB2fKvqE,IvB3fAka,IuB2fQ,CAACqwD,IAAD,CvB3fb,CuB2foB,AvB3fJv/D,EuB2fH,CAAX,CvB3fF,EuB2f0BO,AvB3fJ,SuB2f/B,evB3fS,CAAP;AuB4fL,AvB3fI;AAjvBU;AuB8uCf,AvB9uCe,SuB8uCNu/D,sBAAT,CAAgCjB,IAAhC,EAAsC;AAAEkB,AvB9uCzB,EuB8uCyBA,iBAAiB,GAAG,KAAtB,sBvB/eH;AuB+egCnB,AvB/ehC,EuB+egCA,UvB3f3C,CuB2fsD,GAAG,KAA3C;AAAkDoB,AvB1flFliD,EuB0fkFkiD,QvB1flFliD,KuB0f+F,GAAG,GvB3fhF,EuB2fc,AvB1fhCA,WADkB;AuB2fuFmiD,AvBzfzGliD,EuByfyGkiD,QvBzfzGliD,MuByfuH,GAAG,CvB3fxG,CuB2fc,CvBzfhCA,UAFkB;AuB2f4GmiD,AvBxf9HliD,EuBwf8HkiD,QvBxf9HliD,WuBwfiJ,AvB3f/H,EAGlBA,CuBwfoJ,EAApH,QvB3fd;AuB2fsI2hD,AvBvfxJ1hD,EuBufwJ0hD,QvBvfxJ1hD,MuBufsK,GAAG,CvB3fvJ,EAIlBA,CuBufgC,SvB3fd;AuB2f6Jg/C,AvBtf/K/+C,EuBsf+K++C,QvBtf/K/+C,UuBsfiM,EvBtfjMA,CuBsfoM7qB,CvBtfpM6qB,WuBsfgC;AAA0Ki8C,AvB3fxL,EuB2fwLA,OvB/e7K,QuB+e4L,GAAG9mE,YAA5L;AAAkM8sE,AvB9elO,EuB8ekOA,UvB9e5NrmD,OuB8e6O,EvB9epO,CuB8euO,EAAtN,AvB9ed,KAAKja,KAAL,CAAWka,MAA7B;AuB8e0PqmD,AvB7e1P,EuB6e0PA,OAAO,GAAG,CvB7e/PvgE,GuB6e2B,EvB7ehC,CAAWka,MAAX,GAAoB,IAApB;AuB6e0QsmD,AvB3e1Q,EuB2e0QA,GAAG,GAAG,IvB3e1QxhD,CuB2e0B,QvB3ejB,GAAG,KAAK5P,SAAL,EAAlB;AuB2euRqxD,AvBzevRzhD,EuByeuRyhD,MvBzevRzhD,IuByeiS,GAAI,EAArQ,AvBzevB,CAACoB,cAAVpB,GAA2B,EAA3BA;AuByewS0hD,AvBxexS1hD,EuBwewS0hD,MvBxexS1hD,SuBweuT,AvBxe9S,CAAC7d,EuBwegT,EAA1R,MvBxehC6d,GAAuB,EAAvBA;AuBwe8T07C,AvBve9T17C,EuBue8T07C,MvBve9T17C,CuBueqU,GAAG6zC,KvBve/T,CAACxyC,QAAVrB,GAAqB,EAArBA;AuBuegC,AvBtehCA,CuBseN,EAAgW,KvBte1VA,SAAS,CAACsB,aAAVtB,GAA0B,EAA1BA;AuBueF,AvBreE,QuBqeI3N,IvBreAkP,GuBqeO,GAAG,EvBred;AuBseE,AvBreF,YAAIC,KAAJ;AuBseE0/C,AvBreF,IuBqeEA,QvBreEz/C,OAAO,EuBmeG,CvBneA,KAAd;AuBseEs+C,IAAAA,WAHY;AAIZoB,AvBteF,IuBseEA,QvBteEjiD,KuBkeU,KvBleA,IAAI,KAAKvtB,KAAL,CAAW+d,KAAE,CAACnV,SAAd,CAAlB,EAA4C;AuBue1C6mE,AvBteA,IuBseAA,WvBteKjmD,GuBieO,GvBjeZ,CAAYzL,KAAE,CAACnV,SAAf;AuBueA8mE,AvBteA9/C,IuBseA8/C,MvBteA9/C,QAAQ,GAAG7R,EuBgeC,GvBheC,CAAChV,SAAd6mB;AuBueAu/C,AvBteAt/C,IuBseAs/C,MvBteAt/C,KAAK,GuB+dO,AvB/dJ,IAARA;AuBueA48C,AvB1eF,IuB0eEA,KvB1eF,MAIO,OuB8dO;AASZ9C,AvBteA,IuBseAA,WvBteKngD,IuB6dO,EvB7dZ,CAAYzL,KAAE,CAACpV,MAAf;AuBueAgnE,AvBteA//C,IuBseA+/C,MvBteA//C,QAAQ,GuB4dI,AvB5dD7R,KAAE,CAACjV,MAAd8mB;AuBueAggD,AvBteA//C,IuBseA+/C,MvBteA//C,CuB2dY,IvB3dP,GAAG,KAARA;AuBueAggD,AvBteD,IuBseCA,GAZY;AAaZC,IAAAA,UAbY;AAcZC,AvBteF1hD,IuBseE0hD,IvBteF1hD,SAAS,CAACwB,CuBwdI,IvBxddxB,GAAkBwB,KAAlBxB;AuBueE07C,IAAAA,OAfY;AAgBZ,AvBteF,eAAO,CAAC,KAAK/pE,KAAL,CAAW4vB,QAAX,CAAR,EAA8B;AuBue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","file":"day3-compiler-core.2119eb1b.js","sourceRoot":"../src","sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString:\n    \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { %0 as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString:\n    'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate:\n    \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport { ErrorMessages as Errors } from \"./error-message.js\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { type BindingTypes } from \"../util/scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nfunction isSimpleProperty(node: N.Node): boolean {\n  return (\n    node != null &&\n    node.type === \"Property\" &&\n    node.kind === \"init\" &&\n    node.method === false\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      // $FlowIgnore\n      const bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.value;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args: [\n        BindingTypes | void,\n        ?Set<string>,\n        boolean | void,\n        boolean | void,\n      ]\n    ): void {\n      switch (expr.type) {\n        case \"ObjectPattern\":\n          expr.properties.forEach(prop => {\n            this.checkLVal(\n              prop.type === \"Property\" ? prop.value : prop,\n              \"object destructuring pattern\",\n              ...args,\n            );\n          });\n          break;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n      }\n    }\n\n    checkProto(\n      prop: N.ObjectMember | N.SpreadElement,\n      isRecord: boolean,\n      protoRef: { used: boolean },\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      // $FlowIgnore: check prop.method and fallback to super method\n      if (prop.method) {\n        return;\n      }\n      super.checkProto(prop, isRecord, protoRef, refExpressionErrors);\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: ?boolean,\n      topLevel: boolean,\n      end: TokenType,\n    ): void {\n      super.parseBlockBody(node, allowDirectives, topLevel, end);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n\n      type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n      return this.finishNode(node, type);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (isSimpleProperty(node)) {\n        this.toAssignable(node.value);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        throw this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        throw this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      this.state.value === \"of\" &&\n      !this.state.exprAllowed &&\n      prevType !== tt._function &&\n      prevType !== tt._class\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: $ReadOnlyArray<number>): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","// @flow\n\nconst reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b00000000,\n             SCOPE_PROGRAM      = 0b00000001,\n             SCOPE_FUNCTION     = 0b00000010,\n             SCOPE_ARROW        = 0b00000100,\n             SCOPE_SIMPLE_CATCH = 0b00001000,\n             SCOPE_SUPER        = 0b00010000,\n             SCOPE_DIRECT_SUPER = 0b00100000,\n             SCOPE_CLASS        = 0b01000000,\n             SCOPE_TS_MODULE    = 0b10000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE           = 0b00000_0000_01,\n             BIND_KIND_TYPE            = 0b00000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR            = 0b00000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL        = 0b00000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION       = 0b00000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE        = 0b00000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE           = 0b00001_0000_00,\n             BIND_FLAGS_CLASS          = 0b00010_0000_00,\n             BIND_FLAGS_TS_ENUM        = 0b00100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM  = 0b01000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY = 0b10000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        node.expression = this.parseExpression();\n      }\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"public\"\n  | \"private\"\n  | \"protected\";\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.hash) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers<T: TsModifier>(\n      modified: { [key: TsModifier]: ?true },\n      allowedModifiers: T[],\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?T = this.tsParseModifier(allowedModifiers);\n\n        if (!modifier) break;\n\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n        modified[modifier] = true;\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (!readonly && (this.match(tt.parenL) || this.isRelational(\"<\"))) {\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      const readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        if (readonly) node.readonly = true;\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        this.expect(tt._new);\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      this.eat(operator);\n      let type = parseConstituentType();\n      if (this.match(operator)) {\n        const types = [type];\n        while (this.eat(operator)) {\n          types.push(parseConstituentType());\n        }\n        const node: N.TsUnionType | N.TsIntersectionType = this.startNodeAtNode(\n          type,\n        );\n        node.types = types;\n        type = this.finishNode(node, kind);\n      }\n      return type;\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            const node: N.TsTypePredicate = this.startNodeAtNode(t);\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          const node: N.TsTypePredicate = this.startNodeAtNode(t);\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        const node = this.startNodeAtNode(t);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      node.moduleReference = this.tsParseModuleReference();\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInDeclareContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      switch (value) {\n        case \"abstract\":\n          if (this.tsCheckLineTerminatorAndMatch(tt._class, next)) {\n            const cls: N.ClassDeclaration = node;\n            cls.abstract = true;\n            if (next) {\n              this.next();\n              if (!this.match(tt._class)) {\n                this.unexpected(null, tt._class);\n              }\n            }\n            return this.parseClass(\n              cls,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (next) this.next();\n          if (this.match(tt.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminatorAndMatch(tokenType: TokenType, next: boolean) {\n      return (next || this.match(tokenType)) && !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        const ahead = this.lookahead();\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\")\n        ) {\n          node.importKind = \"type\";\n          this.next();\n        }\n      }\n\n      if (!node.importKind) {\n        node.importKind = \"value\";\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.expect(tt._import);\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        this.parseClass(cls, true, true);\n        cls.abstract = true;\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      this.tsParseModifiers(member, [\"declare\"]);\n      const accessibility = this.parseAccessModifier();\n      if (accessibility) member.accessibility = accessibility;\n      this.tsParseModifiers(member, [\"declare\"]);\n\n      const callParseClassMember = () => {\n        super.parseClassMember(classBody, member, state);\n      };\n      if (member.declare) {\n        this.tsInDeclareContext(callParseClassMember);\n      } else {\n        callParseClassMember();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n\n        return;\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isDeclareContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (this.match(tt.jsxTagStart)) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isDeclareContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInDeclareContext<T>(cb: () => T): T {\n      const oldIsDeclareContext = this.state.isDeclareContext;\n      this.state.isDeclareContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isDeclareContext = oldIsDeclareContext;\n      }\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and moduleAttributes plugins.\",\n      );\n    }\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: SyntaxError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n  isDeclareContext: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to throw an error for\n  // an octal literal in a directive that occurs prior\n  // to a \"use strict\" directive.\n  octalPositions: number[] = [];\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (!this.match(tt.num) && !this.match(tt.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart =\n        this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n\n    this.state.octalPositions = [];\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      if (this.state.strict) {\n        this.raise(start, Errors.StrictOctalLiteral);\n      } else {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  // Used to read escaped characters\n\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else if (this.state.strict) {\n          this.raise(this.state.pos - 1, Errors.StrictNumericEscape);\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, Errors.StrictNumericEscape);\n            } else {\n              // This property is used to throw an error for\n              // an octal literal in a directive that occurs prior\n              // to a \"use strict\" directive.\n              this.state.octalPositions.push(codePos);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport { Errors } from \"./error\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(): void {\n    if (!this.isLineTerminator()) this.unexpected(null, tt.semi);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (prop.type === \"ObjectProperty\") prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (prop.type === \"ObjectMethod\") continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\ntype raiseFunction = (number, string, ...any) => void;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ string> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, message: string) {\n    this.errors.set(pos, message);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (message: string, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {string} message Error message\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, message);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {string} message\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(pos: number, message: string): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {string} message\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((message, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, message);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope.js\";\nimport { Errors } from \"./error\";\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      prop.type === \"ObjectMethod\" ||\n      prop.computed ||\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        // If we have [Yield] production, `yield` will start a YieldExpression thus\n        // regex is allowed following. Otherwise `yield` is an identifier and regex\n        // is disallowed in tt.name.updateContext\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        if (\n          op === tt.exponent &&\n          left.type === \"UnaryExpression\" &&\n          (this.options.createParenthesizedExpressions ||\n            !(left.extra && left.extra.parenthesized))\n        ) {\n          this.raise(\n            left.argument.start,\n            Errors.UnexpectedTokenUnaryExponentiation,\n          );\n        }\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary();\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (\n          (arg.type === \"MemberExpression\" ||\n            arg.type === \"OptionalMemberExpression\") &&\n          arg.property.type === \"PrivateName\"\n        ) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      state.optionalChainMember = optional = true;\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed\n      ? this.parseExpression()\n      : this.parseMaybePrivateName(true);\n\n    if (property.type === \"PrivateName\") {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(property.id.name, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        // todo(Babel 8): remove the if condition,\n        // moduleAttributes is renamed to importAssertions\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            return this.parseAsyncArrowUnaryFunction(id);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo();\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(node.id.name, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              node.id.name,\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  parseDo(): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (\n      node.callee.type === \"OptionalMemberExpression\" ||\n      node.callee.type === \"OptionalCallExpression\"\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        prop.type !== \"ObjectProperty\" &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    // The tokenizer uses `braceIsBlock` to detect whether `{` starts a block statement.\n    // If `{` is a block statement, `exprAllowed` will be `true`.\n    // However the tokenizer can not handle edge cases like `0 ? a : { a : 1 } / 2`, here\n    // we update `exprAllowed` when an object-like is parsed.\n    this.state.exprAllowed = false;\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bigint) ||\n        this.match(tt.decimal)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (prop.key.type !== \"PrivateName\") {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(\n          startLoc,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n      } else {\n        this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.scope.inFunction) return this.prodParam.hasAwait;\n    if (this.options.allowAwaitOutsideFunction) return true;\n    if (this.hasPlugin(\"topLevelAwait\")) {\n      return this.inModule && this.prodParam.hasAwait;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(): N.AwaitExpression {\n    const node = this.startNode();\n\n    this.next();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (\n        this.hasPrecedingLineBreak() ||\n        // All the following expressions are ambiguous:\n        //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n        this.match(tt.plusMin) ||\n        this.match(tt.parenL) ||\n        this.match(tt.bracketL) ||\n        this.match(tt.backQuote) ||\n        // Sometimes the tokenizer generates tt.slash for regexps, and this is\n        // handler by parseExprAtom\n        this.match(tt.regexp) ||\n        this.match(tt.slash) ||\n        // This code could be parsed both as a modulo operator or as an intrinsic:\n        //   await %x(0)\n        (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n      ) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    program.sourceType = this.options.sourceType;\n\n    program.interpreter = this.parseInterpreterDirective();\n\n    this.parseBlockBody(program, true, true, tt.eof);\n\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const octalPositions = [];\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      // Track octal literals that occur before a \"use strict\" directive.\n      if (!parsedNonDirective && this.state.octalPositions.length) {\n        octalPositions.push(...this.state.octalPositions);\n      }\n\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n        const directive = this.stmtToDirective(stmt);\n        directives.push(directive);\n\n        if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n          hasStrictModeDirective = true;\n          this.setStrict(true);\n        }\n\n        continue;\n      }\n\n      parsedNonDirective = true;\n      body.push(stmt);\n    }\n\n    // Throw an error for any octal literals found before a\n    // \"use strict\" directive. Strict mode will be set at parse\n    // time for any literals that occur after the directive.\n    if (this.state.strict && octalPositions.length) {\n      for (const pos of octalPositions) {\n        this.raise(pos, Errors.StrictOctalLiteral);\n      }\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.expect(tt.semi);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.expect(tt.semi);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(\n          classBody,\n          ((member: any): N.StaticBlock),\n          state,\n        );\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (method.key.type === \"PrivateName\") {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = key.type === \"PrivateName\";\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (method.key.type === \"PrivateName\") {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassElementName(publicMethod);\n\n      if (method.key.type === \"PrivateName\") {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n    state: N.ParseClassMemberState,\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // Start a new expression scope, this is required for parsing edge cases like:\n    // async (x = class { static { await; } }) => {}\n    this.expressionScope.enter(newExpressionScope());\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.expressionScope.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (state.hadStaticBlock) {\n      this.raise(member.start, Errors.DuplicateStaticBlock);\n    }\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      node.key.id.name,\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation || this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.extra.raw,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    }\n    // todo(Babel 8): remove module attributes support\n    else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      if (this.match(tt.string)) {\n        node.key = this.parseLiteral<N.StringLiteral>(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (keyName !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          keyName,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ScopeHandler from \"../util/scope\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    const ScopeHandler = this.getScopeHandler();\n\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n","class WalkerBase {constructor() { WalkerBase.prototype.__init.call(this);WalkerBase.prototype.__init2.call(this);WalkerBase.prototype.__init3.call(this);WalkerBase.prototype.__init4.call(this); }\n\t __init() {this.should_skip = false;}\n\t __init2() {this.should_remove = false;}\n\t __init3() {this.replacement = null;}\n\n\t __init4() {this.context = {\n\t\tskip: () => (this.should_skip = true),\n\t\tremove: () => (this.should_remove = true),\n\t\treplace: (node) => (this.replacement = node)\n\t};}\n\n\t replace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t remove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass SyncWalkerClass extends WalkerBase {\n\t\n\t\n\n\tconstructor(walker) {\n\t\tsuper();\n\t\tthis.enter = walker.enter;\n\t\tthis.leave = walker.leave;\n\t}\n\n\t visit(\n\t\tnode,\n\t\tparent,\n\t\tenter,\n\t\tleave,\n\t\tprop,\n\t\tindex\n\t) {\n\t\tif (node) {\n\t\t\tif (enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tenter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = (node )[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, enter, leave, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, enter, leave, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tleave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\nclass AsyncWalkerClass extends WalkerBase {\n\t\n\t\n\n\tconstructor(walker) {\n\t\tsuper();\n\t\tthis.enter = walker.enter;\n\t\tthis.leave = walker.leave;\n\t}\n\n\t async visit(\n\t\tnode,\n\t\tparent,\n\t\tenter,\n\t\tleave,\n\t\tprop,\n\t\tindex\n\t) {\n\t\tif (node) {\n\t\t\tif (enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tawait enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = (node )[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, enter, leave, key, i))) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tawait this.visit(value, node, enter, leave, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tawait leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\nfunction walk(ast, walker) {\n\tconst instance = new SyncWalkerClass(walker);\n\treturn instance.visit(ast, null, walker.enter, walker.leave);\n}\n\nasync function asyncWalk(\n\tast,\n\twalker\n) {\n\tconst instance = new AsyncWalkerClass(walker);\n\treturn await instance.visit(ast, null, walker.enter, walker.leave);\n}\n\nexport { walk, asyncWalk };\n","import { isString, hyphenate, extend, isObject, isArray, NO, makeMap, isSymbol, NOOP, PatchFlagNames, isGloballyWhitelisted, babelParserDefaultPlugins, hasOwn, isOn, isReservedProp, toHandlerKey, camelize } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\nimport { parse } from '@babel/parser';\nimport { walk as walk$1 } from 'estree-walker';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    // transform errors\r\n    [27 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [28 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [29 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if.`,\r\n    [30 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [31 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [33 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [34 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [36 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [39 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [40 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [41 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [42 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [43 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [44 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [45 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [46 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [47 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [48 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `withScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_SCOPE_ID]: `withScopeId`,\r\n    [WITH_CTX]: `withCtx`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(CREATE_BLOCK);\r\n        }\r\n        else {\r\n            context.helper(CREATE_VNODE);\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic, loc = locStub, isConstant = false) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        isConstant,\r\n        content,\r\n        isStatic\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst memberExpRE = /^[A-Za-z_$][\\w$]*(?:\\s*\\.\\s*[A-Za-z_$][\\w$]*|\\[[^\\]]+\\])*$/;\r\nconst isMemberExpression = (path) => {\r\n    if (!path)\r\n        return false;\r\n    return memberExpRE.test(path.trim());\r\n};\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.substr(offset, length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isBindKey(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isBindKey(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    const props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        node.props = propsWithInjection;\r\n    }\r\n    else {\r\n        node.arguments[2] = propsWithInjection;\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    return `_${type}_${name.replace(/[^\\w]/g, '_')}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    comments: false\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    for (const key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] = rawOptions[key] || defaultParserOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace management for more efficient output\r\n    // (same as v2 whitespace: 'condense')\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */) {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // If:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - the whitespace is adjacent to a comment, or:\r\n                    // - the whitespace is between two elements AND contains newline\r\n                    // Then the whitespace is ignored.\r\n                    if (!prev ||\r\n                        !next ||\r\n                        prev.type === 3 /* COMMENT */ ||\r\n                        next.type === 3 /* COMMENT */ ||\r\n                        (prev.type === 1 /* ELEMENT */ &&\r\n                            next.type === 1 /* ELEMENT */ &&\r\n                            /[\\r\\n]/.test(node.content))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, condensed consecutive whitespace inside the text\r\n                        // down to a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else {\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // also remove comment nodes in prod by default\r\n            if (!(process.env.NODE_ENV !== 'production') &&\r\n                node.type === 3 /* COMMENT */ &&\r\n                !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // check v-pre\r\n    if (!context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    const options = context.options;\r\n    if (!context.inVPre && !options.isCustomElement(tag)) {\r\n        const hasVIs = props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'is');\r\n        if (options.isNativeTag && !hasVIs) {\r\n            if (!options.isNativeTag(tag))\r\n                tagType = 1 /* COMPONENT */;\r\n        }\r\n        else if (hasVIs ||\r\n            isCoreComponent(tag) ||\r\n            (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n            /^[A-Z]/.test(tag) ||\r\n            tag === 'component') {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template' &&\r\n            props.some(p => {\r\n                return (p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name));\r\n            })) {\r\n            tagType = 3 /* TEMPLATE */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-|:|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        const dirName = match[1] ||\r\n            (startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.indexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                }\r\n                content = content.substr(1, content.length - 2);\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                isConstant: isStatic,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // true by `transformExpression` to make it eligible for hoisting.\r\n                isConstant: false,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers: match[3] ? match[3].substr(1).split('.') : [],\r\n            loc\r\n        };\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            isConstant: false,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = ['<', context.options.delimiters[0]];\r\n    if (mode === 3 /* CDATA */) {\r\n        endTokens.push(']]>');\r\n    }\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        rawText.indexOf('&') === -1) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                //TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, new Map(), \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, resultCache, doNotHoistNode = false) {\r\n    let hasHoistedNode = false;\r\n    // Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\r\n    // static bindings with expressions. These expressions are guaranteed to be\r\n    // constant so they are still eligible for hoisting, but they are only\r\n    // available at runtime and therefore cannot be evaluated ahead of time.\r\n    // This is only a concern for pre-stringification (via transformHoist by\r\n    // @vue/compiler-dom), but doing it here allows us to perform only one full\r\n    // walk of the AST and allow `stringifyStatic` to stop walking as soon as its\r\n    // stringficiation threshold is met.\r\n    let hasRuntimeConstant = false;\r\n    const { children } = node;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            let staticType;\r\n            if (!doNotHoistNode &&\r\n                (staticType = getStaticType(child, resultCache)) > 0) {\r\n                if (staticType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    hasRuntimeConstant = true;\r\n                }\r\n                child.codegenNode.patchFlag =\r\n                    -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                child.codegenNode = context.hoist(child.codegenNode);\r\n                hasHoistedNode = true;\r\n                continue;\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        !hasNonHoistableProps(child)) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */) {\r\n            const staticType = getStaticType(child.content, resultCache);\r\n            if (staticType > 0) {\r\n                if (staticType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    hasRuntimeConstant = true;\r\n                }\r\n                child.codegenNode = context.hoist(child.codegenNode);\r\n                hasHoistedNode = true;\r\n            }\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            walk(child, context, resultCache);\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, resultCache, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, resultCache, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (!hasRuntimeConstant && hasHoistedNode && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n}\r\nfunction getStaticType(node, resultCache = new Map()) {\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n            const cached = resultCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag && !hasNonHoistableProps(node)) {\r\n                // element self is static. check its children.\r\n                let returnType = 1 /* FULL_STATIC */;\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getStaticType(node.children[i], resultCache);\r\n                    if (childType === 0 /* NOT_STATIC */) {\r\n                        resultCache.set(node, 0 /* NOT_STATIC */);\r\n                        return 0 /* NOT_STATIC */;\r\n                    }\r\n                    else if (childType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                        returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                    }\r\n                }\r\n                // check if any of the props contain runtime constants\r\n                if (returnType !== 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ &&\r\n                            p.name === 'bind' &&\r\n                            p.exp &&\r\n                            (p.exp.type === 8 /* COMPOUND_EXPRESSION */ ||\r\n                                p.exp.isRuntimeConstant)) {\r\n                            returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // stati then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    codegenNode.isBlock = false;\r\n                }\r\n                resultCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                resultCache.set(node, 0 /* NOT_STATIC */);\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 1 /* FULL_STATIC */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_STATIC */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getStaticType(node.content, resultCache);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.isConstant\r\n                ? node.isRuntimeConstant\r\n                    ? 2 /* HAS_RUNTIME_CONSTANT */\r\n                    : 1 /* FULL_STATIC */\r\n                : 0 /* NOT_STATIC */;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 1 /* FULL_STATIC */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getStaticType(child, resultCache);\r\n                if (childType === 0 /* NOT_STATIC */) {\r\n                    return 0 /* NOT_STATIC */;\r\n                }\r\n                else if (childType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_STATIC */;\r\n    }\r\n}\r\n/**\r\n * Even for a node with no patch flag, it is possible for it to contain\r\n * non-hoistable expressions that refers to scope variables, e.g. compiler\r\n * injected keys or cached event handlers. Therefore we need to always check the\r\n * codegenNode's props to be sure.\r\n */\r\nfunction hasNonHoistableProps(node) {\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                !key.isStatic ||\r\n                (value.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                    (!value.isStatic && !value.isConstant))) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, ssr = false, ssrCssVars = ``, bindingMetadata = {}, onError = defaultOnError }) {\r\n    const context = {\r\n        // options\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        ssr,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        onError,\r\n        // state\r\n        root,\r\n        helpers: new Set(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: new Set(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        // methods\r\n        helper(name) {\r\n            context.helpers.add(name);\r\n            return name;\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, true);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(++context.cached, exp, isVNode);\r\n        }\r\n    };\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = [...context.imports];\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                codegenNode.isBlock = true;\r\n                helper(OPEN_BLOCK);\r\n                helper(CREATE_BLOCK);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssr = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssr,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    {\r\n        genFunctionPreamble(ast, context);\r\n    }\r\n    // binding optimizations\r\n    const optimizeSources = options.bindingMetadata\r\n        ? `, $props, $setup, $data, $options`\r\n        : ``;\r\n    // enter render function\r\n    if (!ssr) {\r\n        push(`function render(_ctx, _cache${optimizeSources}) {`);\r\n    }\r\n    else {\r\n        push(`function ssrRender(_ctx, _push, _parent, _attrs${optimizeSources}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName } = context;\r\n    const VueBinding =  runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline }) {\r\n    const resolver = helper(type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        const id = assets[i];\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)})`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    hoists.forEach((exp, i) => {\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = `);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    });\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (( (process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        // SSR only types\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            break;\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { push, helper, pure } = context;\r\n        if (pure) {\r\n            push(PURE_ANNOTATION);\r\n        }\r\n        push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n    }\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(helper(isBlock ? CREATE_BLOCK : CREATE_VNODE) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (( (process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent, scopeId, mode } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if ( isSlot) {\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(43 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false) {\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        // simple in-browser validation (same logic in 2.x)\r\n        validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        return node;\r\n    }\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    const { bindingMetadata } = context;\r\n    const prefix = (raw) => {\r\n        const source = hasOwn(bindingMetadata, raw)\r\n            ? `$` + bindingMetadata[raw]\r\n            : `_ctx`;\r\n        return `${source}.${raw}`;\r\n    };\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail on parens to prevent any possible function invocations.\r\n    const bailConstant = rawExp.indexOf(`(`) > -1;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        if (!asParams &&\r\n            !context.identifiers[rawExp] &&\r\n            !isGloballyWhitelisted(rawExp) &&\r\n            !isLiteralWhitelisted(rawExp)) {\r\n            node.content = prefix(rawExp);\r\n        }\r\n        else if (!context.identifiers[rawExp] && !bailConstant) {\r\n            // mark node constant for hoisting unless it's referring a scope variable\r\n            node.isConstant = true;\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parse(source, {\r\n            plugins: [...context.expressionPlugins, ...babelParserDefaultPlugins]\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(43 /* X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    const isDuplicate = (node) => ids.some(id => id.start === node.start);\r\n    walk$1(ast, {\r\n        enter(node, parent) {\r\n            if (node.type === 'Identifier') {\r\n                if (!isDuplicate(node)) {\r\n                    const needPrefix = shouldPrefix(node, parent);\r\n                    if (!knownIds[node.name] && needPrefix) {\r\n                        if (isPropertyShorthand(node, parent)) {\r\n                            // property shorthand like { foo }, we need to add the key since we\r\n                            // rewrite the value\r\n                            node.prefix = `${node.name}: `;\r\n                        }\r\n                        node.name = prefix(node.name);\r\n                        ids.push(node);\r\n                    }\r\n                    else if (!isStaticPropertyKey(node, parent)) {\r\n                        // The identifier is considered constant unless it's pointing to a\r\n                        // scope variable (a v-for alias, or a v-slot prop)\r\n                        if (!(needPrefix && knownIds[node.name]) && !bailConstant) {\r\n                            node.isConstant = true;\r\n                        }\r\n                        // also generate sub-expressions for other identifiers for better\r\n                        // source map support. (except for property keys which are static)\r\n                        ids.push(node);\r\n                    }\r\n                }\r\n            }\r\n            else if (isFunction(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                node.params.forEach(p => walk$1(p, {\r\n                    enter(child, parent) {\r\n                        if (child.type === 'Identifier' &&\r\n                            // do not record as scope variable if is a destructured key\r\n                            !isStaticPropertyKey(child, parent) &&\r\n                            // do not record if this is a default value\r\n                            // assignment of a destructured variable\r\n                            !(parent &&\r\n                                parent.type === 'AssignmentPattern' &&\r\n                                parent.right === child)) {\r\n                            const { name } = child;\r\n                            if (node.scopeIds && node.scopeIds.has(name)) {\r\n                                return;\r\n                            }\r\n                            if (name in knownIds) {\r\n                                knownIds[name]++;\r\n                            }\r\n                            else {\r\n                                knownIds[name] = 1;\r\n                            }\r\n                            (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        },\r\n        leave(node) {\r\n            if (node !== ast.body[0].expression && node.scopeIds) {\r\n                node.scopeIds.forEach((id) => {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant /* isConstant */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.isConstant = !bailConstant;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nconst isFunction = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isPropertyShorthand = (node, parent) => {\r\n    return (isStaticProperty(parent) &&\r\n        parent.value === node &&\r\n        parent.key.type === 'Identifier' &&\r\n        parent.key.name === node.name &&\r\n        parent.key.start === node.start);\r\n};\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\nfunction shouldPrefix(identifier, parent) {\r\n    if (!(isFunction(parent) &&\r\n        // not id of a FunctionDeclaration\r\n        (parent.id === identifier ||\r\n            // not a params of a function\r\n            parent.params.includes(identifier))) &&\r\n        // not a key of Property\r\n        !isStaticPropertyKey(identifier, parent) &&\r\n        // not a property of a MemberExpression\r\n        !((parent.type === 'MemberExpression' ||\r\n            parent.type === 'OptionalMemberExpression') &&\r\n            parent.property === identifier &&\r\n            !parent.computed) &&\r\n        // not in an Array destructure pattern\r\n        !(parent.type === 'ArrayPattern') &&\r\n        // skip whitelisted globals\r\n        !isGloballyWhitelisted(identifier.name) &&\r\n        // special case for webpack compilation\r\n        identifier.name !== `require` &&\r\n        // is a special keyword but parsed as identifier\r\n        identifier.name !== `arguments`) {\r\n        return true;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(27 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') && comments.length) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(28 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, true));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true, false, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const vnodeCall = firstChild\r\n            .codegenNode;\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            vnodeCall.isBlock = true;\r\n            helper(OPEN_BLOCK);\r\n            helper(CREATE_BLOCK);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return vnodeCall;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            (exp.isStatic !== branchExp.isStatic ||\r\n                exp.content !== branchExp.content)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const keyProp = findProp(node, `key`);\r\n        const keyProperty = keyProp\r\n            ? createObjectProperty(`key`, keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp)\r\n            : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.isConstant;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, `${fragmentFlag} /* ${PatchFlagNames[fragmentFlag]} */`, undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const isTemplate = isTemplateNode(node);\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(CREATE_BLOCK);\r\n                }\r\n            }\r\n            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(30 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim()\r\n        .replace(stripParensRE, '')\r\n        .trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }) {\r\n    const params = [];\r\n    if (value) {\r\n        params.push(value);\r\n    }\r\n    if (key) {\r\n        if (!value) {\r\n            params.push(createSimpleExpression(`_`, false));\r\n        }\r\n        params.push(key);\r\n    }\r\n    if (index) {\r\n        if (!key) {\r\n            if (!value) {\r\n                params.push(createSimpleExpression(`_`, false));\r\n            }\r\n            params.push(createSimpleExpression(`__`, false));\r\n        }\r\n        params.push(index);\r\n    }\r\n    return params;\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    const buildDefaultSlotProperty = (props, children) => createObjectProperty(`default`, buildSlotFn(props, children, loc));\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression('' + slotFlag, false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            if (child.tagType === 2 /* SLOT */ ||\r\n                (child.tagType === 0 /* ELEMENT */ &&\r\n                    hasForwardedSlots(child.children))) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    if (!(node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 0 /* ELEMENT */ ||\r\n            node.tagType === 1 /* COMPONENT */))) {\r\n        return;\r\n    }\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        const vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' ||\r\n                    tag === 'foreignObject' ||\r\n                    // #938: elements with dynamic keys should be forced into blocks\r\n                    findProp(node, 'key', true)));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(44 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild && !getStaticType(child)) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    const { tag } = node;\r\n    // 1. dynamic component\r\n    const isProp = node.tag === 'component' ? findProp(node, 'is') : findDir(node, 'is');\r\n    if (isProp) {\r\n        const exp = isProp.type === 6 /* ATTRIBUTE */\r\n            ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n            : isProp.exp;\r\n        if (exp) {\r\n            return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                exp\r\n            ]);\r\n        }\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // no we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (from setup bindings)\r\n    if (context.bindingMetadata[tag] === 'setup') {\r\n        return `$setup[${JSON.stringify(tag)}]`;\r\n    }\r\n    // 4. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getStaticType(value) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class' && !isComponent) {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style' && !isComponent) {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            // skip :is on <component>\r\n            if (name === 'is' && tag === 'component') {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', true, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isBind = name === 'bind';\r\n            const isOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(39 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once - it is handled by its dedicated transform.\r\n            if (name === 'once') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isBind && tag === 'component' && isBindKey(arg, 'is'))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isOn && ssr) {\r\n                continue;\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isBind || isOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isBind) {\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isBind\r\n                        ? 33 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if ((patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || name.startsWith('on')) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // inject statement for resolving directive\r\n        context.helper(RESOLVE_DIRECTIVE);\r\n        context.directives.add(dir.name);\r\n        dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName\r\n        ];\r\n        if (slotProps) {\r\n            slotArgs.push(slotProps);\r\n        }\r\n        if (children.length) {\r\n            if (!slotProps) {\r\n                slotArgs.push(`{}`);\r\n            }\r\n            slotArgs.push(createFunctionExpression([], children, false, false, loc));\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    // check for <slot name=\"xxx\" OR :name=\"xxx\" />\r\n    const name = findProp(node, 'name');\r\n    if (name) {\r\n        if (name.type === 6 /* ATTRIBUTE */ && name.value) {\r\n            // static name\r\n            slotName = JSON.stringify(name.value.content);\r\n        }\r\n        else if (name.type === 7 /* DIRECTIVE */ && name.exp) {\r\n            // dynamic name\r\n            slotName = name.exp;\r\n        }\r\n    }\r\n    const propsWithoutName = name\r\n        ? node.props.filter(p => p !== name)\r\n        : node.props;\r\n    if (propsWithoutName.length > 0) {\r\n        const { props, directives } = buildProps(node, context, propsWithoutName);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^\\s*function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            const rawName = arg.content;\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let isCacheable = context.cacheHandlers && !exp;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (isCacheable && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement ? `$event` : `(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (isCacheable) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .prop is no longer necessary due to new patch behavior\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(33 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */)))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr && child.type !== 2 /* TEXT */) {\r\n                        callArgs.push(`${1 /* TEXT */} /* ${PatchFlagNames[1 /* TEXT */]} */`);\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node)) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(40 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : exp.loc.source;\r\n    if (!isMemberExpression(expString)) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, createCompoundExpression([`$event => (`, exp, ` = $event)`]))\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, true)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformFor,\r\n            ...(  (process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(45 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(46 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if ( options.cacheHandlers) {\r\n        onError(createCompilerError(47 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(48 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, KEEP_ALIVE, MERGE_PROPS, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, WITH_CTX, WITH_DIRECTIVES, WITH_SCOPE_ID, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildProps, buildSlots, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBindKey, isBuiltInType, isCoreComponent, isMemberExpression, isSimpleIdentifier, isSlotOutlet, isStaticExp, isTemplateNode, isText, isVSlot, locStub, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode };\n","/**\n * @file day3-compiler-core.js\n * @author 素燕\n * @description vue3 模板编译，来自公众号素燕\n */\n\nimport {\n    baseCompile\n} from '@vue/compiler-core';\n\nlet app = document.getElementById('suyan-app');\n\nlet ret = baseCompile(app.innerHTML);\n\nconsole.log(ret);\n"]}